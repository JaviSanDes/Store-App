{"version":3,"sources":["store/reducers/menuToggle.js","store/actionTypes.js","store/reducers/Products.js","store/reducers/OrderData.js","store/reducers/auth.js","store/index.js","store/actions/auth.js","store/actions/menuToggle.js","components/Header.js","store/actions/Products.js","index.js","components/modal/Slider.js","components/Buttons.js","components/modal/ProductModal.js","components/Product.js","components/SideBar.js","components/shoppingCart/Product2.js","components/shoppingCart/shoppingCart.js","components/Footer.js","pages/Home.js","components/checkout/CheckoutPhases.js","components/checkout/Product.js","components/checkout/Order.js","store/actions/OrderData.js","components/checkout/Shipping.jsx","components/checkout/Payment.js","components/checkout/SummaryModal.js","components/checkout/Summary.js","pages/Checkout.js","components/settings/Auth.js","components/settings/SettingsForm.js","components/settings/ModalSettings.js","pages/Settings.js","components/orders/box.js","components/orders/Product.js","components/orders/OrderItems.js","components/orders/OrderDetails.js","pages/Orders.js","components/auth/SignIn.js","components/auth/SignUp.js","pages/Auth.js","routes/Routes.js","App.js"],"names":["initialState","MenuVisible","menuToggleReducer","state","action","type","isLoading","hasErrored","products","order","newProducts","totalPrice","setProducts","map","product","Object","values","forEach","newProduct","some","_id","push","addProduct","productId","price","quantity","includes","removeProduct","filter","id","eliminateProduct","removedAllProducts","productReducer","shippingData","paymentData","user","orderData","payload","userId","token","firstName","lastName","email","signInSuccess","idToken","userID","authLogOut","reducer","rootReducer","combineReducers","menuToggle","productsReducer","orderDataReducer","auth","authReducer","initStore","createStore","composeWithDevTools","applyMiddleware","thunkMiddleware","toggleMenu","Header","dispatch","useDispatch","history","useHistory","useSelector","location","useLocation","useState","search","form","setForm","isvisivle","setIsVisible","isHidden","setIsHidden","useEffect","other","pathname","handleUserKeyPress","e","target","className","window","addEventListener","removeEventListener","onClick","role","src","alt","placeholder","name","value","onChange","oldForm","inputHandler","val","to","Cookies","remove","path","loadingInProgress","bool","getProducts","group","a","axios","get","result","data","Component","Slider","props","image","translate","setTranslate","border","color","style1","setStyle1","style2","setStyle2","style3","setStyle3","sliderHandler","style","transform","transition","process","Buttons","ProductModal","measure","description","isvisible","setVisible","offer","toggle","Modal","isOpen","size","ModalHeader","ModalBody","Product","visible","imageLoading","setImageLoading","toggleModal","background","height","width","display","onLoad","SideBar","menuStyle","left","data-test","data-testid","ListGroup","ListGroupItem","tag","Product2","toFixed","ShoppingCart","setToggle","productsOrdered","newProductsNotification","key","length","innerWidth","Footer","Home","storeProducts","params","useParams","document","getElementById","position","toLowerCase","render","Spinner","element","assessment","CheckoutPhases","phase","Order","nextPhase","productsId","productID","pvp","total","confirmProducts","Shipping","submit","backHandler","validForm","setValidForm","country","address","zipCode","phone","isValidName","isValidAdress","isValidZipCode","isValidPhone","validator","handlerForm","Form","FormGroup","Label","for","Input","minLength","required","pattern","preventDefault","submitHandler","Payment","paymentMethod","cardNumber","expiration","cvcCode","isValidFirstName","isValidLastName","isValidCardNumber","isValidExpiration","s","bits","split","RegExp","join","d","Date","getFullYear","parseInt","getMonth","isValidDate","isValidCvcCode","maxLength","min","SummaryModal","modal","responseText","modalHandler","xmlns","viewBox","cx","cy","r","fill","ModalFooter","Summary","setIsLoading","setModal","setResponseText","cardNUmber","lasChars","substr","payHandler","headers","post","res","console","log","Checkout","setPhase","scrollTo","calculate","heightDimension","innerHeight","minHeight","phaseHandler","Phase","Auth","displayError","errorMsg","setDisplayError","password","passwordHandler","nextButtonHandler","SettingsForm","formHandler","changeInfoHandler","passwordForm","passwordFormHandler","changePasswordHandler","switchModal","confirmPassword","title","ModalSettings","deleteAccModal","deleteAccountHandler","Settings","setPassword","validPassForm","setValidPassForm","setDeleteAccModal","setErrorMsg","isDataVisible","setIsDataVisible","setPasswordForm","response","isValidEmail","test","isValidPass","isValidConfirPass","put","delete","Box","viewOrder","date","OrderItems","OrderDetails","boxToggle","orderInfo","DeliveryAddress","OrderDate","DeliveryTime","SubTotal","DeliveryFee","Total","Progress","Orders","setOrderInfo","orders","setOrders","box","up","down","offsetHeight","Axios","req","fetchData","i","dateOrder","boxOpen","SignIn","signInForm","signInFormHandler","SignUp","signUpForm","signUpFormHandler","confirmEmail","isSignIn","setisSignIn","setSignInForm","setSignUpForm","url","set","isValidConfirmEmail","switchHandler","elem1","elem2","classList","add","withRouter","exact","App","ReactDOM","store"],"mappings":"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","file":"static/js/main.6557b743.chunk.js","sourcesContent":["import { TOGGLE_MENU } from '../actionTypes';\r\n\r\nconst initialState = {\r\n    MenuVisible: false,\r\n};\r\n\r\nconst menuToggleReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case TOGGLE_MENU:\r\n            return {\r\n                MenuVisible: !state.MenuVisible,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default menuToggleReducer;\r\n","export const TOGGLE_MENU = 'TOGGLE_MENU';\r\n\r\nexport const LOADING_ERROR = 'LOADING_ERROR';\r\nexport const LOADING_IN_PROGRESS = 'LOADING_IN_PROGRESS';\r\nexport const SET_PRODUCTS = 'SET_PRODUCTS';\r\n\r\nexport const ADD_PRODUCT = 'ADD_PRODUCT';\r\nexport const REMOVE_PRODUCT = 'REMOVE_PRODUCT';\r\nexport const ELIMINATE_PRODUCT = 'ELIMINATE_PRODUCT';\r\nexport const REMOVE_ALL_PRODUCTS = 'REMOVE_ALL_PRODUCTS';\r\n\r\nexport const RESET_NOTIFICATIONS = 'RESET_NOTIFICATIONS';\r\n\r\nexport const CONFIRM_ORDER_PRODUCTS = 'CONFIRM_ORDER_PRODUCTS';\r\nexport const CONFIRM_SHIPPING_DATA = 'CONFIRM_SHIPPING_DATA';\r\nexport const CONFIRM_PAYMENT_DATA = 'CONFIRM_PAYMENT_DATA';\r\n\r\nexport const SIGN_IN_SUCCESS = 'SIGN_IN_SUCCESS';\r\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT';\r\nexport const CLEAN_ORDER_DATA = 'CLEAN_ORDER_DATA';\r\n","import {\r\n    LOADING_ERROR,\r\n    LOADING_IN_PROGRESS,\r\n    SET_PRODUCTS,\r\n    ADD_PRODUCT,\r\n    REMOVE_PRODUCT,\r\n    ELIMINATE_PRODUCT,\r\n    RESET_NOTIFICATIONS,\r\n    REMOVE_ALL_PRODUCTS,\r\n} from '../actionTypes';\r\n\r\nconst initialState = {\r\n    isLoading: false,\r\n    hasErrored: false,\r\n    products: [],\r\n    order: [],\r\n    newProducts: 0,\r\n    totalPrice: 0,\r\n};\r\n\r\nconst setProducts = (state, action) => {\r\n    const products = state.products.map(product => ({ ...product })); // CLONE ARRAY OF OBJECTS\r\n    const newProducts = action.products;\r\n    Object.values(newProducts).forEach(newProduct => {\r\n        if (!products.some(product => product._id === newProduct._id))\r\n            products.push({ ...newProduct });\r\n    });\r\n    return {\r\n        ...state,\r\n        isLoading: false,\r\n        products: [...products],\r\n    };\r\n};\r\n\r\nconst addProduct = (state, action) => {\r\n    const products = state.products.map(product => ({ ...product })); // CLONE ARRAY OF OBJECTS\r\n    const order = [...state.order];\r\n    const newProducts = state.newProducts + 1;\r\n    let { totalPrice } = state;\r\n    products.map(product => {\r\n        if (product._id === action.productId) {\r\n            totalPrice += product.price;\r\n            product.quantity += 1;\r\n            if (!order.includes(product._id)) order.push(product._id);\r\n        }\r\n        return null;\r\n    });\r\n    return {\r\n        ...state,\r\n        products,\r\n        order,\r\n        newProducts,\r\n        totalPrice,\r\n    };\r\n};\r\n\r\nconst removeProduct = (state, action) => {\r\n    const products = state.products.map(product => ({ ...product }));\r\n    let order = [...state.order];\r\n    const newProducts = state.newProducts - 1;\r\n    let { totalPrice } = state;\r\n    products.map(product => {\r\n        if (product._id === action.productId) {\r\n            if (product.quantity > 0) {\r\n                product.quantity -= 1;\r\n                totalPrice -= product.price;\r\n            }\r\n            if (product.quantity <= 0) {\r\n                order = order.filter(id => id !== product._id);\r\n            }\r\n        }\r\n        return null;\r\n    });\r\n    return {\r\n        ...state,\r\n        products,\r\n        order,\r\n        newProducts,\r\n        totalPrice,\r\n    };\r\n};\r\n\r\nconst eliminateProduct = (state, action) => {\r\n    const products = state.products.map(product => ({ ...product }));\r\n    let order = [...state.order];\r\n    let { totalPrice } = state;\r\n    products.map(product => {\r\n        if (product._id === action.productId) {\r\n            totalPrice -= product.price * product.quantity;\r\n            product.quantity = 0;\r\n            order = order.filter(id => id !== product._id);\r\n        }\r\n        return null;\r\n    });\r\n    return {\r\n        ...state,\r\n        products,\r\n        order,\r\n        totalPrice,\r\n    };\r\n};\r\n\r\nconst removedAllProducts = state => {\r\n    const products = state.products.map(product => ({ ...product }));\r\n    products.map(product => (product.quantity = 0));\r\n    return {\r\n        ...state,\r\n        order: [],\r\n        products,\r\n        newProducts: 0,\r\n    };\r\n};\r\n\r\nconst productReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case LOADING_ERROR:\r\n            return {\r\n                ...state,\r\n            };\r\n        case LOADING_IN_PROGRESS:\r\n            return {\r\n                ...state,\r\n                isLoading: true,\r\n            };\r\n        case SET_PRODUCTS:\r\n            return setProducts(state, action);\r\n        case ADD_PRODUCT:\r\n            return addProduct(state, action);\r\n        case REMOVE_PRODUCT:\r\n            return removeProduct(state, action);\r\n        case ELIMINATE_PRODUCT:\r\n            return eliminateProduct(state, action);\r\n        case RESET_NOTIFICATIONS:\r\n            return {\r\n                ...state,\r\n                newProducts: 0,\r\n            };\r\n        case REMOVE_ALL_PRODUCTS:\r\n            return removedAllProducts(state);\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default productReducer;\r\n","import {\r\n    CONFIRM_ORDER_PRODUCTS,\r\n    CONFIRM_SHIPPING_DATA,\r\n    CONFIRM_PAYMENT_DATA,\r\n    CLEAN_ORDER_DATA,\r\n} from '../actionTypes';\r\n\r\nconst initialState = {\r\n    shippingData: {},\r\n    paymentData: {},\r\n    price: {},\r\n    user: '',\r\n    products: [],\r\n};\r\n\r\nconst orderData = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case CONFIRM_ORDER_PRODUCTS:\r\n            return {\r\n                ...state,\r\n                price: { ...action.payload.price },\r\n                user: action.payload.userId,\r\n                products: [...action.payload.products],\r\n            };\r\n        case CONFIRM_SHIPPING_DATA:\r\n            return {\r\n                ...state,\r\n                shippingData: { ...action.payload },\r\n            };\r\n        case CONFIRM_PAYMENT_DATA:\r\n            return {\r\n                ...state,\r\n                paymentData: { ...action.payload },\r\n            };\r\n        case CLEAN_ORDER_DATA:\r\n            return {\r\n                ...state,\r\n                shippingData: {},\r\n                paymentData: {},\r\n                price: {},\r\n                user: '',\r\n                products: [],\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default orderData;\r\n","import * as actionType from '../actionTypes';\r\n\r\nconst initialState = {\r\n    token: null,\r\n    userId: null,\r\n    firstName: null,\r\n    lastName: null,\r\n    email: null,\r\n};\r\n\r\nconst signInSuccess = (state, action) => {\r\n    return {\r\n        ...state,\r\n        token: action.idToken,\r\n        userId: action.userID,\r\n        firstName: action.firstName,\r\n        lastName: action.lastName,\r\n        email: action.email,\r\n    };\r\n};\r\n\r\nconst authLogOut = state => {\r\n    return {\r\n        ...state,\r\n        token: null,\r\n        userId: null,\r\n        firstName: null,\r\n        lastName: null,\r\n        email: null,\r\n    };\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionType.SIGN_IN_SUCCESS:\r\n            return signInSuccess(state, action);\r\n        case actionType.AUTH_LOGOUT:\r\n            return authLogOut(state, action);\r\n        default:\r\n            return state;\r\n    }\r\n};\r\nexport default reducer;\r\n","import { createStore, applyMiddleware, combineReducers } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunkMiddleware from 'redux-thunk';\r\n\r\n// reducer\r\nimport menuToggleReducer from './reducers/menuToggle';\r\nimport productsReducer from './reducers/Products';\r\nimport orderDataReducer from './reducers/OrderData';\r\nimport authReducer from './reducers/auth';\r\n\r\nconst rootReducer = combineReducers({\r\n    menuToggle: menuToggleReducer,\r\n    products: productsReducer,\r\n    orderData: orderDataReducer,\r\n    auth: authReducer,\r\n});\r\n\r\nconst initStore = createStore(\r\n    rootReducer,\r\n    composeWithDevTools(applyMiddleware(thunkMiddleware))\r\n);\r\n\r\nexport default initStore;\r\n","import Cookies from 'js-cookie';\r\nimport axios from 'axios';\r\nimport * as actionType from '../actionTypes';\r\n\r\nexport const signInSuccess = (token, firstName, lastName, email, _id) => {\r\n    return {\r\n        type: actionType.SIGN_IN_SUCCESS,\r\n        idToken: token,\r\n        userID: _id,\r\n        firstName,\r\n        lastName,\r\n        email,\r\n    };\r\n};\r\n\r\nexport const logOut = () => {\r\n    Cookies.remove('token', { path: '' });\r\n    return {\r\n        type: actionType.AUTH_LOGOUT,\r\n    };\r\n};\r\n\r\nexport const authCheckState = () => {\r\n    return async dispatch => {\r\n        const token = Cookies.get('token');\r\n        if (token) {\r\n            const headers = {\r\n                'Content-Type': 'application/json',\r\n                'x-auth-token': token,\r\n            };\r\n            try {\r\n                const res = await axios.post(\r\n                    'http://localhost:3000/api/auth/verifyToken',\r\n                    null,\r\n                    { headers }\r\n                );\r\n                const { firstName, lastName, email, _id } = res.data;\r\n                dispatch(signInSuccess(token, firstName, lastName, email, _id));\r\n            } catch (error) {\r\n                Cookies.remove('token', { path: '' });\r\n                // dispatch(authError(error.response.data));\r\n            }\r\n        }\r\n    };\r\n};\r\n","import * as actionType from '../actionTypes';\r\n\r\nconst toggleMenu = () => ({\r\n    type: actionType.TOGGLE_MENU,\r\n});\r\n\r\nexport default toggleMenu;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory, NavLink, useLocation } from 'react-router-dom';\r\nimport { logOut } from '../store/actions/auth';\r\nimport toggleMenu from '../store/actions/menuToggle';\r\n\r\nconst Header = () => {\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const firstName = useSelector(state => state.auth.firstName);\r\n    const lastName = useSelector(state => state.auth.lastName);\r\n    const token = useSelector(state => state.auth.token);\r\n    const location = useLocation();\r\n    const [form, setForm] = useState({ search: '' });\r\n    const [isvisivle, setIsVisible] = useState(false);\r\n    const [isHidden, setIsHidden] = useState(false);\r\n\r\n    const toggleMenuHandler = () => dispatch(toggleMenu());\r\n    const redirectHandler = () => {\r\n        history.push('/');\r\n    };\r\n\r\n    useEffect(() => {\r\n        const other =\r\n            location.pathname === '/checkout' ||\r\n            location.pathname === '/settings' ||\r\n            location.pathname === '/orders' ||\r\n            location.pathname === '/Auth';\r\n        other ? setIsHidden(true) : setIsHidden(false);\r\n    }, [location]);\r\n\r\n    const inputHandler = e => {\r\n        const { name, value } = e.target;\r\n        setForm(oldForm => {\r\n            return {\r\n                ...oldForm,\r\n                [name]: value,\r\n            };\r\n        });\r\n        history.push({ pathname: `/search/${value}` });\r\n    };\r\n    const handleUserKeyPress = e => {\r\n        if (e.target.className !== 'header-user-image') setIsVisible(false);\r\n    };\r\n\r\n    useEffect(() => {\r\n        window.addEventListener('click', handleUserKeyPress);\r\n\r\n        return () => {\r\n            window.removeEventListener('click', handleUserKeyPress);\r\n        };\r\n    }, []);\r\n\r\n    const clickHandler = () => {\r\n        setIsVisible(val => !val);\r\n    };\r\n\r\n    const logOutHandler = () => {\r\n        dispatch(logOut());\r\n    };\r\n\r\n    const signHandler = () => {\r\n        history.push('/Auth');\r\n    };\r\n\r\n    return (\r\n        <div className=\"Header\">\r\n            <div className=\"Header-container\" id=\"Header-container-id\">\r\n                <button\r\n                    className=\"Header-button\"\r\n                    onClick={toggleMenuHandler}\r\n                    type=\"button\"\r\n                >\r\n                    <div className=\"Header-butto-linen\" />\r\n                    <div className=\"Header-butto-linen\" />\r\n                    <div className=\"Header-butto-linen\" />\r\n                </button>\r\n                <div\r\n                    className=\"header-home\"\r\n                    onClick={redirectHandler}\r\n                    role=\"button\"\r\n                >\r\n                    <h1 className=\"header-home-link\">E</h1>\r\n                    <h1 className=\"header-home-link-2\">commerce</h1>\r\n                </div>\r\n                {!isHidden && (\r\n                    <div className=\"header-search\">\r\n                        <img\r\n                            src={process.env.PUBLIC_URL + 'images/search.png'}\r\n                            className=\"header-search-image\"\r\n                            alt=\"img\"\r\n                            role=\"button\"\r\n                        />\r\n                        <input\r\n                            className=\"header-search-input\"\r\n                            placeholder=\"Search your product\"\r\n                            name=\"search\"\r\n                            value={form.search}\r\n                            id=\"header-search-input-id\"\r\n                            onChange={e => inputHandler(e)}\r\n                        />\r\n                    </div>\r\n                )}\r\n\r\n                <div className=\"header-login\">\r\n                    <img\r\n                        src={process.env.PUBLIC_URL + 'images/user.png'}\r\n                        alt=\"img\"\r\n                        className=\"header-user-image\"\r\n                        onClick={clickHandler}\r\n                        role=\"button\"\r\n                    />\r\n                    {isvisivle && (\r\n                        <div className=\"header-user-box\">\r\n                            <div className=\"header-triangle\"></div>\r\n                            <div>\r\n                                <p>Welcome, {`${firstName} ${lastName}!`}</p>\r\n                                <p>Enjoy your shopping</p>\r\n                            </div>\r\n                            <NavLink to=\"/settings\">\r\n                                <button type=\"button\">Settings</button>\r\n                            </NavLink>\r\n                            <NavLink to=\"/orders\">\r\n                                <button type=\"button\">My Purchases</button>\r\n                            </NavLink>\r\n\r\n                            <button\r\n                                type=\"button\"\r\n                                className=\"header-logOut-button\"\r\n                                onClick={logOutHandler}\r\n                            >\r\n                                Log Out\r\n                            </button>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n            {!token && (\r\n                <div className=\"Header-container-button\">\r\n                    <button type=\"button\" onClick={signHandler}>\r\n                        SignIn/SignUp\r\n                    </button>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Header;\r\n","import axios from 'axios';\r\nimport * as actionType from '../actionTypes';\r\n\r\nexport const loadingError = bool => ({\r\n    type: actionType.LOADING_ERROR,\r\n    hasErrored: bool,\r\n});\r\n\r\nexport const loadingInProgress = bool => ({\r\n    type: actionType.LOADING_IN_PROGRESS,\r\n    isLoading: bool,\r\n});\r\n\r\nexport const setProducts = data => ({\r\n    type: actionType.SET_PRODUCTS,\r\n    products: data,\r\n});\r\n\r\nexport const addProduct = id => ({\r\n    type: actionType.ADD_PRODUCT,\r\n    productId: id,\r\n});\r\n\r\nexport const removeProduct = id => ({\r\n    type: actionType.REMOVE_PRODUCT,\r\n    productId: id,\r\n});\r\n\r\nexport const eliminateProduct = id => ({\r\n    type: actionType.ELIMINATE_PRODUCT,\r\n    productId: id,\r\n});\r\nexport const removeAllProducts = () => ({\r\n    type: actionType.REMOVE_ALL_PRODUCTS,\r\n});\r\n\r\nexport const resetNotifications = () => ({\r\n    type: actionType.RESET_NOTIFICATIONS,\r\n});\r\n\r\nexport function getProducts(group) {\r\n    return async dispatch => {\r\n        dispatch(loadingError(false));\r\n        dispatch(loadingInProgress(true));\r\n        const result = await axios.get(\r\n            `http://localhost:3000/api/products/${group}`\r\n        );\r\n        dispatch(setProducts({ ...result.data }));\r\n    };\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { HashRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport initStore from './store/index';\r\nimport App from './App';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './styles/index.scss';\r\n\r\nfunction render(Component) {\r\n    ReactDOM.render(\r\n        <Provider store={initStore}>\r\n            <HashRouter>\r\n                <Component />\r\n            </HashRouter>\r\n        </Provider>,\r\n        document.getElementById('root')\r\n    );\r\n}\r\n\r\nrender(App);\r\n","/* eslint-disable jsx-a11y/click-events-have-key-events */\r\n/* eslint-disable jsx-a11y/no-static-element-interactions */\r\nimport React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Slider = props => {\r\n    const { image } = props;\r\n    const [translate, setTranslate] = useState(0);\r\n    const [style1, setStyle1] = useState({ border: 2, color: '#019E7F' });\r\n    const [style2, setStyle2] = useState({ border: 1, color: '#e6e6e6' });\r\n    const [style3, setStyle3] = useState({ border: 1, color: '#e6e6e6' });\r\n\r\n    const sliderHandler = val => {\r\n        setTranslate(val);\r\n        switch (val) {\r\n            case 0:\r\n                setStyle1({ border: 2, color: '#019E7F' });\r\n                setStyle2({ border: 1, color: '#e6e6e6' });\r\n                setStyle3({ border: 1, color: '#e6e6e6' });\r\n                break;\r\n            case -250:\r\n                setStyle1({ border: 1, color: '#e6e6e6' });\r\n                setStyle2({ border: 2, color: '#019E7F' });\r\n                setStyle3({ border: 1, color: '#e6e6e6' });\r\n                break;\r\n            case -500:\r\n                setStyle1({ border: 1, color: '#e6e6e6' });\r\n                setStyle2({ border: 1, color: '#e6e6e6' });\r\n                setStyle3({ border: 2, color: '#019E7F' });\r\n                break;\r\n            default:\r\n                return val;\r\n        }\r\n        return null;\r\n    };\r\n\r\n    return (\r\n        <div className=\"modal-body-image\">\r\n            <div className=\"modal-body-image-1\">\r\n                <div\r\n                    style={{\r\n                        transform: `translateX(${translate}px)`,\r\n                        transition: 'all 0.5s',\r\n                    }}\r\n                    className=\"modal-body-image-slider\"\r\n                >\r\n                    <img\r\n                        src={\r\n                            process.env.PUBLIC_URL + `images/products/${image}`\r\n                        }\r\n                        alt=\"img\"\r\n                        className=\"modal-body-img-1\"\r\n                    />\r\n                    <img\r\n                        src={\r\n                            process.env.PUBLIC_URL + `images/products/${image}`\r\n                        }\r\n                        alt=\"img\"\r\n                        className=\"modal-body-img-1\"\r\n                    />\r\n                    <img\r\n                        src={\r\n                            process.env.PUBLIC_URL + `images/products/${image}`\r\n                        }\r\n                        alt=\"img\"\r\n                        className=\"modal-body-img-1\"\r\n                    />\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"modal-body-image-2\">\r\n                <div\r\n                    style={{\r\n                        border: `${style1.border}px solid ${style1.color}`,\r\n                    }}\r\n                    onClick={() => sliderHandler(0)}\r\n                >\r\n                    <img\r\n                        src={\r\n                            process.env.PUBLIC_URL + `images/products/${image}`\r\n                        }\r\n                        alt=\"img\"\r\n                        className=\"modal-body-img-2\"\r\n                    />\r\n                </div>\r\n                <div\r\n                    style={{\r\n                        border: `${style2.border}px solid ${style2.color}`,\r\n                    }}\r\n                    onClick={() => sliderHandler(-250)}\r\n                >\r\n                    <img\r\n                        src={\r\n                            process.env.PUBLIC_URL + `images/products/${image}`\r\n                        }\r\n                        alt=\"img\"\r\n                        className=\"modal-body-img-2\"\r\n                    />\r\n                </div>\r\n                <div\r\n                    style={{\r\n                        border: `${style3.border}px solid ${style3.color}`,\r\n                    }}\r\n                    onClick={() => sliderHandler(-500)}\r\n                >\r\n                    <img\r\n                        src={\r\n                            process.env.PUBLIC_URL + `images/products/${image}`\r\n                        }\r\n                        alt=\"img\"\r\n                        className=\"modal-body-img-2\"\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nSlider.propTypes = {\r\n    image: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Slider;\r\n","/* eslint-disable jsx-a11y/interactive-supports-focus */\r\n/* eslint-disable jsx-a11y/click-events-have-key-events */\r\nimport React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { removeProduct, addProduct } from '../store/actions/Products';\r\n\r\nconst Buttons = props => {\r\n    const { id, quantity } = props;\r\n\r\n    const dispatch = useDispatch();\r\n    return (\r\n        <div className=\"buttons-add-button\">\r\n            <div\r\n                role=\"button\"\r\n                id=\"buttons-add-button-1\"\r\n                className=\"avoid-modal\"\r\n                onClick={() => dispatch(removeProduct(id))}\r\n            >\r\n                -\r\n            </div>\r\n            <p className=\"avoid-modal\">{quantity}</p>\r\n            <div\r\n                role=\"button\"\r\n                id=\"buttons-add-button-2\"\r\n                onClick={() => dispatch(addProduct(id))}\r\n                className=\"avoid-modal\"\r\n            >\r\n                +\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nButtons.propTypes = {\r\n    id: PropTypes.string.isRequired,\r\n    quantity: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Buttons;\r\n","import React from 'react';\r\nimport { Modal, ModalHeader, ModalBody } from 'reactstrap';\r\nimport { useDispatch } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Slider from './Slider';\r\nimport Buttons from '../Buttons';\r\nimport { addProduct } from '../../store/actions/Products';\r\n\r\nconst ProductModal = props => {\r\n    const {\r\n        id,\r\n        name,\r\n        measure,\r\n        description,\r\n        price,\r\n        image,\r\n        isvisible,\r\n        setVisible,\r\n        quantity,\r\n        group,\r\n        offer,\r\n    } = props;\r\n    const toggle = () => setVisible();\r\n    const dispatch = useDispatch();\r\n\r\n    return (\r\n        <Modal isOpen={isvisible} toggle={toggle} size=\"lg\">\r\n            <ModalHeader toggle={toggle} />\r\n            <ModalBody>\r\n                <div className=\"modal-body\">\r\n                    <Slider image={image} />\r\n                    <div className=\"modal-body-info\">\r\n                        <div className=\"modal-body-info-nameOffer\">\r\n                            <h1 className=\"modal-body-info-name\">{name}</h1>\r\n                            {offer > 0 ? (\r\n                                <div className=\"modal-offer\">{offer}%</div>\r\n                            ) : null}\r\n                        </div>\r\n\r\n                        <p>{measure}</p>\r\n                        <div className=\"modal-body-info-text\">\r\n                            {description}\r\n                            <br />\r\n                            <br />\r\n                            <p className=\"modal-tag\">{group}</p>\r\n                        </div>\r\n                        <div className=\"modal-product-price\">\r\n                            <p className=\"product-price-value\">{price} €</p>\r\n                            {quantity > 0 ? (\r\n                                <Buttons id={id} quantity={quantity} />\r\n                            ) : (\r\n                                <div\r\n                                    role=\"button\"\r\n                                    id=\"product-price-button\"\r\n                                    className=\"avoid-modal\"\r\n                                    onClick={() => dispatch(addProduct(id))}\r\n                                >\r\n                                    Add to Cart\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </ModalBody>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nProductModal.propTypes = {\r\n    id: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    measure: PropTypes.string.isRequired,\r\n    description: PropTypes.string.isRequired,\r\n    price: PropTypes.number.isRequired,\r\n    image: PropTypes.string.isRequired,\r\n    isvisible: PropTypes.bool.isRequired,\r\n    setVisible: PropTypes.func.isRequired,\r\n    quantity: PropTypes.number.isRequired,\r\n    group: PropTypes.string.isRequired,\r\n    offer: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default ProductModal;\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useDispatch } from 'react-redux';\r\nimport ProductModal from './modal/ProductModal';\r\nimport { addProduct } from '../store/actions/Products';\r\n\r\nimport Buttons from './Buttons';\r\n\r\nconst Product = props => {\r\n    const {\r\n        id,\r\n        name,\r\n        measure,\r\n        description,\r\n        price,\r\n        image,\r\n        offer,\r\n        quantity,\r\n        group,\r\n    } = props;\r\n\r\n    const [visible, setVisible] = useState(false);\r\n    const dispatch = useDispatch();\r\n    const [imageLoading, setImageLoading] = useState(true);\r\n\r\n    const toggleModal = e => {\r\n        if (e.target.className !== 'avoid-modal') setVisible(true);\r\n    };\r\n\r\n    return (\r\n        <div\r\n            className=\"product-container\"\r\n            role=\"button\"\r\n            onClick={e => toggleModal(e)}\r\n        >\r\n            {offer > 0 ? <div className=\"product-offer\">{offer}%</div> : null}\r\n\r\n            <div className=\"product-image\">\r\n                {!imageLoading ? null : (\r\n                    <div\r\n                        style={{\r\n                            background: 'rgb(250, 250, 250)',\r\n                            height: '200px',\r\n                            width: '100%',\r\n                        }}\r\n                    />\r\n                )}\r\n                <img\r\n                    style={!imageLoading ? {} : { display: 'none' }}\r\n                    src={process.env.PUBLIC_URL + `images/products/${image}`}\r\n                    onLoad={() => setImageLoading(false)}\r\n                    alt={name}\r\n                />\r\n            </div>\r\n            <h1 className=\"product-name\">{name}</h1>\r\n            <p className=\"product-measure\">{measure}</p>\r\n            <div className=\"product-price\">\r\n                <p className=\"product-price-value\">{price} €</p>\r\n\r\n                {quantity > 0 ? (\r\n                    <Buttons id={id} quantity={quantity} />\r\n                ) : (\r\n                    <div\r\n                        role=\"button\"\r\n                        id=\"product-price-button\"\r\n                        className=\"avoid-modal\"\r\n                        onClick={() => dispatch(addProduct(id))}\r\n                    >\r\n                        Add to Cart\r\n                    </div>\r\n                )}\r\n            </div>\r\n            <div className=\"product-stars\">\r\n                {' '}\r\n                &#9733; &#9733; &#9733; &#9733; &#9733;\r\n            </div>\r\n            <ProductModal\r\n                id={id}\r\n                name={name}\r\n                measure={measure}\r\n                description={description}\r\n                price={price}\r\n                image={image}\r\n                isvisible={visible}\r\n                quantity={quantity}\r\n                group={group}\r\n                setVisible={() => setVisible(!visible)}\r\n                offer={offer}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nProduct.propTypes = {\r\n    id: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    measure: PropTypes.string.isRequired,\r\n    description: PropTypes.string.isRequired,\r\n    price: PropTypes.number.isRequired,\r\n    image: PropTypes.string.isRequired,\r\n    quantity: PropTypes.number.isRequired,\r\n    group: PropTypes.string.isRequired,\r\n    offer: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Product;\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { ListGroup, ListGroupItem } from 'reactstrap';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport toggleMenu from '../store/actions/menuToggle';\r\n\r\nconst SideBar = () => {\r\n    const MenuVisible = useSelector(state => state.menuToggle.MenuVisible);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    let menuStyle = {};\r\n    if (MenuVisible) {\r\n        menuStyle = {\r\n            left: '0px',\r\n        };\r\n    }\r\n    const toggleMenuHandler = () => dispatch(toggleMenu());\r\n\r\n    return (\r\n        <div\r\n            className=\"SideBar-container\"\r\n            style={menuStyle}\r\n            data-test=\"component-sideBar\"\r\n            data-testid=\"component-sideBar-id\"\r\n            id=\"menuId\"\r\n        >\r\n            <button\r\n                className=\"sideBar-button\"\r\n                onClick={toggleMenuHandler}\r\n                type=\"button\"\r\n                data-test=\"sideBar-button\"\r\n            >\r\n                X\r\n            </button>\r\n            <div className=\"sideBar-menu\" data-test=\"sideBar-menu\">\r\n                <ListGroup>\r\n                    <ListGroupItem action className=\"sideBar-menu-title\">\r\n                        MENU\r\n                    </ListGroupItem>\r\n\r\n                    <ListGroupItem\r\n                        tag=\"button\"\r\n                        action\r\n                        className=\"sideBar-menu-group\"\r\n                    >\r\n                        <NavLink to=\"/legume\">\r\n                            <div className=\"sideBar-link\">\r\n                                <img\r\n                                    src={\r\n                                        process.env.PUBLIC_URL +\r\n                                        'images/legume.png'\r\n                                    }\r\n                                    className=\"sideBar-image\"\r\n                                    alt=\"\"\r\n                                    data-test=\"home-image\"\r\n                                />\r\n                                <h4>Legume</h4>\r\n                            </div>\r\n                        </NavLink>\r\n                    </ListGroupItem>\r\n\r\n                    <ListGroupItem\r\n                        tag=\"button\"\r\n                        action\r\n                        className=\"sideBar-menu-group\"\r\n                    >\r\n                        <NavLink to=\"/meat\">\r\n                            <div className=\"sideBar-link\">\r\n                                <img\r\n                                    src={\r\n                                        process.env.PUBLIC_URL +\r\n                                        'images/meat.png'\r\n                                    }\r\n                                    className=\"sideBar-image\"\r\n                                    alt=\"\"\r\n                                    data-test=\"mattress-image\"\r\n                                />\r\n                                <h4>Meat</h4>\r\n                            </div>\r\n                        </NavLink>\r\n                    </ListGroupItem>\r\n\r\n                    <ListGroupItem\r\n                        tag=\"button\"\r\n                        action\r\n                        className=\"sideBar-menu-group\"\r\n                    >\r\n                        <NavLink to=\"/vegetables\">\r\n                            <div className=\"sideBar-link\">\r\n                                <img\r\n                                    src={\r\n                                        process.env.PUBLIC_URL +\r\n                                        'images/vegetable.png'\r\n                                    }\r\n                                    className=\"sideBar-image\"\r\n                                    alt=\"\"\r\n                                    data-test=\"bedBase-image\"\r\n                                />\r\n                                <h4>Vegetables</h4>\r\n                            </div>\r\n                        </NavLink>\r\n                    </ListGroupItem>\r\n\r\n                    <ListGroupItem\r\n                        tag=\"button\"\r\n                        action\r\n                        className=\"sideBar-menu-group\"\r\n                    >\r\n                        <NavLink to=\"/fruits\">\r\n                            <div className=\"sideBar-link\">\r\n                                <img\r\n                                    src={\r\n                                        process.env.PUBLIC_URL +\r\n                                        'images/fruit.png'\r\n                                    }\r\n                                    className=\"sideBar-image\"\r\n                                    alt=\"\"\r\n                                    data-test=\"mattress-image\"\r\n                                />\r\n                                <h4>Fruits</h4>\r\n                            </div>\r\n                        </NavLink>\r\n                    </ListGroupItem>\r\n\r\n                    <ListGroupItem\r\n                        tag=\"button\"\r\n                        action\r\n                        className=\"sideBar-menu-group\"\r\n                    >\r\n                        <NavLink to=\"/fish\">\r\n                            <div className=\"sideBar-link\">\r\n                                <img\r\n                                    src={\r\n                                        process.env.PUBLIC_URL +\r\n                                        'images/fish.png'\r\n                                    }\r\n                                    className=\"sideBar-image\"\r\n                                    alt=\"\"\r\n                                    data-test=\"mattress-image\"\r\n                                />\r\n                                <h4>Fish</h4>\r\n                            </div>\r\n                        </NavLink>\r\n                    </ListGroupItem>\r\n\r\n                    <ListGroupItem\r\n                        tag=\"button\"\r\n                        action\r\n                        className=\"sideBar-menu-group\"\r\n                    >\r\n                        <NavLink to=\"/drinks\">\r\n                            <div className=\"sideBar-link\">\r\n                                <img\r\n                                    src={\r\n                                        process.env.PUBLIC_URL +\r\n                                        'images/drinks.png'\r\n                                    }\r\n                                    className=\"sideBar-image\"\r\n                                    alt=\"\"\r\n                                    data-test=\"mattress-image\"\r\n                                />\r\n                                <h4>Drinks</h4>\r\n                            </div>\r\n                        </NavLink>\r\n                    </ListGroupItem>\r\n\r\n                    <ListGroupItem\r\n                        tag=\"button\"\r\n                        action\r\n                        className=\"sideBar-menu-group\"\r\n                    >\r\n                        <NavLink to=\"/frozen\">\r\n                            <div className=\"sideBar-link\">\r\n                                <img\r\n                                    src={\r\n                                        process.env.PUBLIC_URL +\r\n                                        'images/frozen.png'\r\n                                    }\r\n                                    className=\"sideBar-image\"\r\n                                    alt=\"\"\r\n                                    data-test=\"mattress-image\"\r\n                                />\r\n                                <h4>Frozen</h4>\r\n                            </div>\r\n                        </NavLink>\r\n                    </ListGroupItem>\r\n\r\n                    <ListGroupItem\r\n                        tag=\"button\"\r\n                        action\r\n                        className=\"sideBar-menu-group\"\r\n                    >\r\n                        <NavLink to=\"/pasta\">\r\n                            <div className=\"sideBar-link\">\r\n                                <img\r\n                                    src={\r\n                                        process.env.PUBLIC_URL +\r\n                                        'images/pasta.png'\r\n                                    }\r\n                                    className=\"sideBar-image\"\r\n                                    alt=\"\"\r\n                                    data-test=\"mattress-image\"\r\n                                />\r\n                                <h4>Pasta</h4>\r\n                            </div>\r\n                        </NavLink>\r\n                    </ListGroupItem>\r\n\r\n                    <ListGroupItem\r\n                        tag=\"button\"\r\n                        action\r\n                        className=\"sideBar-menu-group\"\r\n                    >\r\n                        <NavLink to=\"/sweets\">\r\n                            <div className=\"sideBar-link\">\r\n                                <img\r\n                                    src={\r\n                                        process.env.PUBLIC_URL +\r\n                                        'images/sweets.png'\r\n                                    }\r\n                                    className=\"sideBar-image\"\r\n                                    alt=\"\"\r\n                                    data-test=\"mattress-image\"\r\n                                />\r\n                                <h4>Sweets</h4>\r\n                            </div>\r\n                        </NavLink>\r\n                    </ListGroupItem>\r\n\r\n                    <ListGroupItem\r\n                        tag=\"button\"\r\n                        action\r\n                        className=\"sideBar-menu-group\"\r\n                    >\r\n                        <NavLink to=\"/sauces\">\r\n                            <div className=\"sideBar-link\">\r\n                                <img\r\n                                    src={\r\n                                        process.env.PUBLIC_URL +\r\n                                        'images/sauces.png'\r\n                                    }\r\n                                    className=\"sideBar-image\"\r\n                                    alt=\"\"\r\n                                    data-test=\"mattress-image\"\r\n                                />\r\n                                <h4>Sauces</h4>\r\n                            </div>\r\n                        </NavLink>\r\n                    </ListGroupItem>\r\n                </ListGroup>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SideBar;\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport Buttons from '../Buttons';\r\nimport { eliminateProduct } from '../../store/actions/Products';\r\n\r\nconst Product2 = props => {\r\n    const { id, name, price, image, quantity, measure } = props;\r\n\r\n    const dispatch = useDispatch();\r\n    return (\r\n        <div className=\"shoppingCart-product\">\r\n            <div className=\"shoppingCart-image\">\r\n                <img\r\n                    src={process.env.PUBLIC_URL + `images/products/${image}`}\r\n                    alt=\"img\"\r\n                />\r\n            </div>\r\n            <div className=\"shoppingCart-product-description\">\r\n                <p>\r\n                    <b>{name}</b>\r\n                </p>\r\n                <p>\r\n                    {measure}, {price}€/und.\r\n                </p>\r\n                <div className=\"shoppingCart-product-buttons\">\r\n                    <Buttons id={id} quantity={quantity} />\r\n                </div>\r\n            </div>\r\n\r\n            <h1 className=\"shoppingCart-product-price-total\">\r\n                {(price * quantity).toFixed(2)} €\r\n            </h1>\r\n            <button\r\n                className=\"shoppingCart-product-eliminate\"\r\n                type=\"button\"\r\n                onClick={() => dispatch(eliminateProduct(id))}\r\n            >\r\n                X\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nProduct2.propTypes = {\r\n    id: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    price: PropTypes.number.isRequired,\r\n    image: PropTypes.string.isRequired,\r\n    quantity: PropTypes.number.isRequired,\r\n    measure: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Product2;\r\n","import React, { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { resetNotifications } from '../../store/actions/Products';\r\n\r\nimport Product2 from './Product2';\r\n\r\nconst ShoppingCart = () => {\r\n    const [toggle, setToggle] = useState(365);\r\n    const token = useSelector(state => state.auth.token);\r\n    const history = useHistory();\r\n    const productsOrdered = useSelector(state => state.products.products);\r\n    const order = useSelector(state => state.products.order);\r\n    const newProductsNotification = useSelector(\r\n        state => state.products.newProducts\r\n    );\r\n    const dispatch = useDispatch();\r\n    const totalPrice = useSelector(state => state.products.totalPrice);\r\n\r\n    const clickHandler = () => {\r\n        if (window.innerWidth < 600) {\r\n            toggle === 70 ? setToggle(365) : setToggle(70);\r\n        } else {\r\n            toggle === 0 ? setToggle(365) : setToggle(0);\r\n        }\r\n\r\n        dispatch(resetNotifications());\r\n    };\r\n\r\n    const checkoutHandler = () => {\r\n        token ? history.push('/checkout') : history.push('/Auth');\r\n    };\r\n\r\n    const products = [];\r\n    order.map(id => {\r\n        productsOrdered.map(product => {\r\n            if (product._id === id && product.quantity > 0) {\r\n                products.push(\r\n                    <Product2\r\n                        key={product._id}\r\n                        id={product._id}\r\n                        name={product.name}\r\n                        group={product.group}\r\n                        description={product.description}\r\n                        price={product.price}\r\n                        image={product.image}\r\n                        quantity={product.quantity}\r\n                        measure={product.measure}\r\n                    />\r\n                );\r\n            }\r\n            return null;\r\n        });\r\n        return null;\r\n    });\r\n\r\n    return (\r\n        <div\r\n            style={{ transform: `translateX(${toggle}px)` }}\r\n            className=\"shoppingCart-container\"\r\n        >\r\n            <p className=\"shoppingCart-header-totalItems\">\r\n                total items: {products.length}\r\n            </p>\r\n            <div className=\"shoppingCart-header\">\r\n                <button\r\n                    className=\"shoppingCart-toggle\"\r\n                    onClick={clickHandler}\r\n                    type=\"button\"\r\n                >\r\n                    {toggle === 0 ? (\r\n                        <p className=\"shoppingCart-x\">X</p>\r\n                    ) : (\r\n                        <div>\r\n                            <img\r\n                                src={\r\n                                    process.env.PUBLIC_URL + 'images/trolly.png'\r\n                                }\r\n                                className=\"shoppingCart-header-img-trolly\"\r\n                                alt=\"img\"\r\n                            />\r\n                            {newProductsNotification === 0 ? null : (\r\n                                <div className=\"shoppingCart-header-notification\">\r\n                                    {newProductsNotification}\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                    )}\r\n                </button>\r\n            </div>\r\n            <div className=\"shoppingCart-list\">{products}</div>\r\n            <div className=\"shoppingCart-footer\">\r\n                <p className=\"shoppingCart-footer-totalPrice\">\r\n                    Total {totalPrice.toFixed(2)} €\r\n                </p>\r\n                <button\r\n                    className=\"shoppingCart-checkout\"\r\n                    type=\"button\"\r\n                    onClick={checkoutHandler}\r\n                >\r\n                    CHECKOUT\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ShoppingCart;\r\n","import React from 'react';\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <div className=\"Footer-container\">\r\n            <div className=\"Footer-box\">\r\n                <div className=\"Footer-information\">\r\n                    <div className=\"Footer-aboutCompany\">\r\n                        <h3>More about Company</h3>\r\n                        <p>\r\n                            Nemo enim ipsam voluptatem quia voluptas sit\r\n                            aspernatur aut odit aut fugit, sed quia consequuntur\r\n                            magni dolores eos qui ratione voluptatem sequi\r\n                            nesciunt.\r\n                        </p>\r\n                        <p>\r\n                            Nemo enim ipsam voluptatem quia voluptas sit\r\n                            aspernatur aut odit aut fugit, sed quia consequuntur\r\n                            magni dolores eos qui ratione voluptatem sequi\r\n                            nesciunt.\r\n                        </p>\r\n                    </div>\r\n                    <div className=\"Footer-Connected\">\r\n                        <h3>Keep Connected</h3>\r\n                        <div>\r\n                            <img\r\n                                src={\r\n                                    process.env.PUBLIC_URL +\r\n                                    'social_media_PNG/facebook.png'\r\n                                }\r\n                                alt=\"\"\r\n                                width=\"35\"\r\n                                height=\"35\"\r\n                            />\r\n                            <p>Like us on Facebook</p>\r\n                        </div>\r\n                        <div>\r\n                            <img\r\n                                src={\r\n                                    process.env.PUBLIC_URL +\r\n                                    '/social_media_PNG/twitter.png'\r\n                                }\r\n                                alt=\"\"\r\n                                width=\"35\"\r\n                                height=\"35\"\r\n                            />\r\n                            <p>Follow us on Twitter</p>\r\n                        </div>\r\n                        <div>\r\n                            <img\r\n                                src={\r\n                                    process.env.PUBLIC_URL +\r\n                                    'social_media_PNG/google.png'\r\n                                }\r\n                                alt=\"\"\r\n                                width=\"35\"\r\n                                height=\"35\"\r\n                            />\r\n                            <p>Add us on Google Plus</p>\r\n                        </div>\r\n                        <div>\r\n                            <img\r\n                                src={\r\n                                    process.env.PUBLIC_URL +\r\n                                    'social_media_PNG/instagram.png'\r\n                                }\r\n                                alt=\"\"\r\n                                width=\"35\"\r\n                                height=\"35\"\r\n                            />\r\n                            <p>Follow us on Instagram</p>\r\n                        </div>\r\n                        <div>\r\n                            <img\r\n                                src={\r\n                                    process.env.PUBLIC_URL +\r\n                                    'social_media_PNG/linkedin.png'\r\n                                }\r\n                                alt=\"\"\r\n                                width=\"35\"\r\n                                height=\"35\"\r\n                            />\r\n                            <p>Follow us on Linkedin</p>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"Footer-Contact\">\r\n                        <h3>Contact Information</h3>\r\n                        <p>\r\n                            The company name Lorem ipsum dolor, Glasglow Dr 40\r\n                            Fe 72.\r\n                        </p>\r\n                        <p>1234567890</p>\r\n                        <p>contact@example.com</p>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"Footer-copyrhigt\">\r\n                    <p>\r\n                        © 2020 Simple App. All Rights Reserved | Design by\r\n                        JavSan\r\n                    </p>\r\n                    <p>\r\n                        Company Information | Privacy Policy | Terms &\r\n                        Conditions\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Footer;\r\n","import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Spinner } from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nimport { getProducts } from '../store/actions/Products';\r\nimport Product from '../components/Product';\r\nimport SideBar from '../components/SideBar';\r\nimport ShoppingCart from '../components/shoppingCart/shoppingCart';\r\nimport Footer from '../components/Footer';\r\n\r\nconst Home = props => {\r\n    const { group } = props;\r\n    let storeProducts = useSelector(state => state.products.products);\r\n    const isLoading = useSelector(state => state.products.isLoading);\r\n    const dispatch = useDispatch();\r\n    const params = useParams();\r\n\r\n    useEffect(() => {\r\n        const header = document.getElementById('Header-container-id');\r\n        header.style.position = 'fixed';\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        group === 'search'\r\n            ? dispatch(getProducts(`search/${params.id}`))\r\n            : dispatch(getProducts(group));\r\n    }, [group, params.id, dispatch]);\r\n\r\n    if (group === 'offer') {\r\n        storeProducts = storeProducts.filter(product => product.offer === 50);\r\n    } else if (group === 'search') {\r\n        storeProducts = storeProducts.filter(product =>\r\n            product.name.toLowerCase().includes(params.id)\r\n        );\r\n    } else {\r\n        storeProducts = storeProducts.filter(\r\n            product => product.group === group\r\n        );\r\n    }\r\n\r\n    const render = isLoading ? (\r\n        <div className=\"Products-container\">\r\n            <Spinner color=\"primary\" className=\"spinner\" />\r\n        </div>\r\n    ) : (\r\n        <div className=\"Products-container\">\r\n            <h1>{group}</h1>\r\n            <div className=\"Products-products\">\r\n                {storeProducts.map(element => (\r\n                    <Product\r\n                        key={element._id}\r\n                        id={element._id}\r\n                        name={element.name}\r\n                        measure={element.measure}\r\n                        group={element.group}\r\n                        description={element.description}\r\n                        price={element.price}\r\n                        image={element.image}\r\n                        assessment={element.assessment}\r\n                        quantity={element.quantity}\r\n                        offer={element.offer}\r\n                    />\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n    return (\r\n        <div>\r\n            <div className=\"Home-container\">\r\n                <SideBar />\r\n                <div>\r\n                    {group !== 'offer' ? null : (\r\n                        <img\r\n                            src={\r\n                                process.env.PUBLIC_URL + `images/alimentos2.png`\r\n                            }\r\n                            className=\"home-img\"\r\n                            alt=\"img\"\r\n                        />\r\n                    )}\r\n                    <div className=\"Home-body\">\r\n                        <div className=\"home-products\">{render}</div>\r\n                    </div>\r\n                </div>\r\n\r\n                <ShoppingCart />\r\n            </div>\r\n            <Footer />\r\n        </div>\r\n    );\r\n};\r\n\r\nHome.propTypes = {\r\n    group: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport propTypes from 'prop-types';\r\n\r\nconst CheckoutPhases = props => {\r\n    const { phase } = props;\r\n    return (\r\n        <div className=\"checkout-phases-container\">\r\n            <div className=\"checkout-phases-line\"></div>\r\n            <div className=\"checkout-phases-circles\">\r\n                <div className=\"checkout-phase\">\r\n                    <div className=\"checkout-circle\">\r\n                        {phase !== 1 ? null : (\r\n                            <div className=\"checkout-phases-greenCircle\">\r\n                                <p>1</p>\r\n                            </div>\r\n                        )}\r\n                        {phase <= 1 ? null : (\r\n                            <img\r\n                                src={process.env.PUBLIC_URL + 'images/tick.png'}\r\n                                alt=\"\"\r\n                                width=\"30px\"\r\n                                height=\"30px\"\r\n                            />\r\n                        )}\r\n                    </div>\r\n                    <p>Your Cart</p>\r\n                </div>\r\n                <div className=\"checkout-phase\">\r\n                    <div className=\"checkout-circle\">\r\n                        {phase > 1 ? null : <p>2</p>}\r\n                        {phase !== 2 ? null : (\r\n                            <div className=\"checkout-phases-greenCircle\">\r\n                                <p>2</p>\r\n                            </div>\r\n                        )}\r\n                        {phase <= 2 ? null : (\r\n                            <img\r\n                                src={process.env.PUBLIC_URL + 'images/tick.png'}\r\n                                alt=\"\"\r\n                                width=\"30px\"\r\n                                height=\"30px\"\r\n                            />\r\n                        )}\r\n                    </div>\r\n                    <p>Shipping</p>\r\n                </div>\r\n                <div className=\"checkout-phase\">\r\n                    <div className=\"checkout-circle\">\r\n                        {phase > 2 ? null : <p>3</p>}\r\n                        {phase !== 3 ? null : (\r\n                            <div className=\"checkout-phases-greenCircle\">\r\n                                <p>3</p>\r\n                            </div>\r\n                        )}\r\n                        {phase <= 3 ? null : (\r\n                            <img\r\n                                src={process.env.PUBLIC_URL + 'images/tick.png'}\r\n                                alt=\"\"\r\n                                width=\"30px\"\r\n                                height=\"30px\"\r\n                            />\r\n                        )}\r\n                    </div>\r\n                    <p>Payment</p>\r\n                </div>\r\n                <div className=\"checkout-phase\">\r\n                    <div className=\"checkout-circle\">\r\n                        {phase > 3 ? null : <p>4</p>}\r\n                        {phase !== 4 ? null : (\r\n                            <div className=\"checkout-phases-greenCircle\">\r\n                                <p>4</p>\r\n                            </div>\r\n                        )}\r\n                        {phase <= 4 ? null : (\r\n                            <img\r\n                                src={process.env.PUBLIC_URL + 'images/tick.png'}\r\n                                alt=\"\"\r\n                                width=\"30px\"\r\n                                height=\"30px\"\r\n                            />\r\n                        )}\r\n                    </div>\r\n                    <p>Summary</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nCheckoutPhases.propTypes = {\r\n    phase: propTypes.number.isRequired,\r\n};\r\nexport default CheckoutPhases;\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n    addProduct,\r\n    removeProduct,\r\n    eliminateProduct,\r\n} from '../../store/actions/Products';\r\n\r\nconst Product2 = props => {\r\n    const { id, name, price, image, quantity, measure } = props;\r\n\r\n    const dispatch = useDispatch();\r\n    return (\r\n        <div className=\"order-product\">\r\n            <div className=\"order-image\">\r\n                <img\r\n                    src={process.env.PUBLIC_URL + `images/products/${image}`}\r\n                    alt=\"img\"\r\n                />\r\n            </div>\r\n            <div className=\"order-product-description\">\r\n                <p className=\"order-product-description-name\">\r\n                    <b>{name}</b>\r\n                </p>\r\n                <p className=\"order-product-description-price\">\r\n                    {measure}, {price}€/und.\r\n                </p>\r\n            </div>\r\n            <div className=\"order-product-description-buttons\">\r\n                <button\r\n                    type=\"button\"\r\n                    onClick={() => dispatch(removeProduct(id))}\r\n                >\r\n                    -\r\n                </button>\r\n                <div>{quantity}</div>\r\n                <button type=\"button\" onClick={() => dispatch(addProduct(id))}>\r\n                    +\r\n                </button>\r\n            </div>\r\n            <div className=\"order-product-price-total\">\r\n                {(price * quantity).toFixed(2)} €\r\n            </div>\r\n            <button\r\n                className=\"order-product-eliminate\"\r\n                type=\"button\"\r\n                onClick={() => dispatch(eliminateProduct(id))}\r\n            >\r\n                X\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nProduct2.propTypes = {\r\n    id: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    price: PropTypes.number.isRequired,\r\n    image: PropTypes.string.isRequired,\r\n    quantity: PropTypes.number.isRequired,\r\n    measure: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Product2;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport Product from './Product';\r\nimport { confirmProducts } from '../../store/actions/OrderData';\r\n\r\nconst Order = props => {\r\n    const { nextPhase } = props;\r\n    const productsOrdered = useSelector(state => state.products.products);\r\n    const userId = useSelector(state => state.auth.userId);\r\n    const order = useSelector(state => state.products.order);\r\n    const dispatch = useDispatch();\r\n    const totalPrice = useSelector(state => state.products.totalPrice);\r\n\r\n    const submitHandler = () => {\r\n        const productsId = productsOrdered\r\n            .filter(product => product.quantity > 0)\r\n            .map(product => {\r\n                return {\r\n                    productID: product._id,\r\n                    quantity: product.quantity,\r\n                };\r\n            });\r\n\r\n        const price = {\r\n            pvp: totalPrice.toFixed(2),\r\n            total: ((totalPrice * 21) / 100 + totalPrice).toFixed(2),\r\n        };\r\n        const data = {\r\n            products: productsId,\r\n            price,\r\n            userId,\r\n        };\r\n        dispatch(confirmProducts(data));\r\n        nextPhase();\r\n    };\r\n\r\n    const products = [];\r\n    order.map(id => {\r\n        productsOrdered.map(product => {\r\n            if (product._id === id && product.quantity > 0) {\r\n                products.push(\r\n                    <Product\r\n                        key={product._id}\r\n                        id={product._id}\r\n                        name={product.name}\r\n                        group={product.group}\r\n                        description={product.description}\r\n                        price={product.price}\r\n                        image={product.image}\r\n                        quantity={product.quantity}\r\n                        measure={product.measure}\r\n                    />\r\n                );\r\n            }\r\n            return null;\r\n        });\r\n        return null;\r\n    });\r\n    return (\r\n        <div className=\"order-container\">\r\n            <div className=\"order-products\">\r\n                <div className=\"order-products-header\">\r\n                    <p className=\"order-products-header-description\">\r\n                        Description\r\n                    </p>\r\n                    <p className=\"order-products-header-qty\">Qty</p>\r\n                    <p className=\"order-products-header-X\">Total</p>\r\n                </div>\r\n\r\n                <div className=\"order-products-list\">{products}</div>\r\n            </div>\r\n            <div className=\"checkout-price\">\r\n                <div className=\"checkout-price-name\">\r\n                    <p>Sub-Total</p>\r\n                    <p>VAT</p>\r\n                    <h4>Total Price</h4>\r\n                </div>\r\n                <div>\r\n                    <p>{totalPrice.toFixed(2)}€</p>\r\n                    <p> {((totalPrice * 21) / 100).toFixed(2)}€</p>\r\n                    <h4>\r\n                        {((totalPrice * 21) / 100 + totalPrice).toFixed(2)}€\r\n                    </h4>\r\n                </div>\r\n            </div>\r\n            <div className=\"order-nexButton-box\">\r\n                <button\r\n                    className=\"checkout-nextButton\"\r\n                    id=\"checkout-nextButton-id\"\r\n                    type=\"button\"\r\n                    onClick={submitHandler}\r\n                >\r\n                    Next\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nOrder.propTypes = {\r\n    nextPhase: PropTypes.func,\r\n};\r\n\r\nexport default Order;\r\n","import * as actionType from '../actionTypes';\r\n\r\nexport const confirmProducts = data => ({\r\n    type: actionType.CONFIRM_ORDER_PRODUCTS,\r\n    payload: data,\r\n});\r\n\r\nexport const shippingData = data => ({\r\n    type: actionType.CONFIRM_SHIPPING_DATA,\r\n    payload: data,\r\n});\r\n\r\nexport const paymentData = data => ({\r\n    type: actionType.CONFIRM_PAYMENT_DATA,\r\n    payload: data,\r\n});\r\n\r\nexport const cleanOrderData = () => ({\r\n    type: actionType.CLEAN_ORDER_DATA,\r\n});\r\n","import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Form, FormGroup, Label, Input } from 'reactstrap';\r\nimport { useDispatch } from 'react-redux';\r\nimport { shippingData } from '../../store/actions/OrderData';\r\n\r\nconst Shipping = props => {\r\n    const { submit, backHandler } = props;\r\n    const [validForm, setValidForm] = useState(false);\r\n    const dispatch = useDispatch();\r\n    const [form, setForm] = useState({\r\n        name: '',\r\n        country: 'Spain',\r\n        address: '',\r\n        zipCode: '',\r\n        phone: '',\r\n    });\r\n\r\n    const submitHandler = e => {\r\n        if (validForm) {\r\n            e.preventDefault();\r\n            dispatch(shippingData(form));\r\n            submit();\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        const validator = () => {\r\n            const isValidName = form.name.length >= 3;\r\n            const isValidAdress = form.address.length >= 1;\r\n            const isValidZipCode = form.zipCode.length >= 5;\r\n            const isValidPhone = form.phone > 0;\r\n\r\n            if (isValidName && isValidAdress && isValidZipCode && isValidPhone)\r\n                setValidForm(true);\r\n        };\r\n\r\n        validator();\r\n    }, [form]);\r\n\r\n    const handlerForm = e => {\r\n        setForm({\r\n            ...form,\r\n            [e.target.name]: e.target.value,\r\n        });\r\n    };\r\n\r\n    return (\r\n        <Form className=\"shipping-container\">\r\n            <FormGroup>\r\n                <FormGroup>\r\n                    <Label for=\"examplePassword\">Full Name</Label>\r\n                    <Input\r\n                        type=\"text\"\r\n                        name=\"name\"\r\n                        id=\"examplePassword\"\r\n                        placeholder=\"Enter full name\"\r\n                        value={form.name}\r\n                        onChange={handlerForm}\r\n                        minLength=\"3\"\r\n                        required\r\n                    />\r\n                </FormGroup>\r\n                <Label for=\"exampleSelect\">country</Label>\r\n                <Input type=\"select\" name=\"country\">\r\n                    <option>Spain</option>\r\n                    <option>United Kingdom</option>\r\n                    <option>France</option>\r\n                    <option>Germany</option>\r\n                    <option>Italy</option>\r\n                </Input>\r\n            </FormGroup>\r\n            <FormGroup>\r\n                <Label for=\"examplePassword\">Address</Label>\r\n                <Input\r\n                    type=\"text\"\r\n                    name=\"address\"\r\n                    id=\"examplePassword\"\r\n                    placeholder=\"Current address...\"\r\n                    value={form.address}\r\n                    onChange={handlerForm}\r\n                    minLength=\"1\"\r\n                    required\r\n                />\r\n            </FormGroup>\r\n            <FormGroup>\r\n                <Label for=\"examplePassword\">ZIP Code</Label>\r\n                <Input\r\n                    type=\"text\"\r\n                    name=\"zipCode\"\r\n                    id=\"examplePassword\"\r\n                    placeholder=\"Enter full name\"\r\n                    value={form.zipCode}\r\n                    onChange={handlerForm}\r\n                    minLength=\"5\"\r\n                    // maxLength=\"8\"\r\n                    required\r\n                />\r\n            </FormGroup>\r\n            <FormGroup>\r\n                <Label for=\"examplePassword\">Phone Number</Label>\r\n                <Input\r\n                    type=\"number\"\r\n                    name=\"phone\"\r\n                    id=\"examplePassword\"\r\n                    placeholder=\"Current address...\"\r\n                    value={form.phone}\r\n                    onChange={handlerForm}\r\n                    pattern=\"/^[0-9]+$/\"\r\n                    required\r\n                />\r\n            </FormGroup>\r\n            <div className=\"checkout-nextBack-buttons\">\r\n                <button\r\n                    type=\"submit\"\r\n                    id=\"checkout-backButton-id\"\r\n                    className=\"checkout-nextButton\"\r\n                    onClick={e => backHandler(e)}\r\n                >\r\n                    Back\r\n                </button>\r\n                <button\r\n                    type=\"submit\"\r\n                    id=\"checkout-nextButton-id\"\r\n                    className=\"checkout-nextButton\"\r\n                    onClick={e => submitHandler(e)}\r\n                >\r\n                    Next\r\n                </button>\r\n            </div>\r\n        </Form>\r\n    );\r\n};\r\n\r\nShipping.propTypes = {\r\n    submit: PropTypes.func.isRequired,\r\n    backHandler: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Shipping;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Input, Label } from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\nimport { useDispatch } from 'react-redux';\r\nimport { paymentData } from '../../store/actions/OrderData';\r\n\r\nconst Payment = props => {\r\n    const { submit, backHandler } = props;\r\n    const [validForm, setValidForm] = useState(false);\r\n    const dispatch = useDispatch();\r\n    const [form, setForm] = useState({\r\n        paymentMethod: 'card',\r\n        firstName: '',\r\n        lastName: '',\r\n        cardNumber: '',\r\n        expiration: '',\r\n        cvcCode: '',\r\n    });\r\n\r\n    // expected input dd/mm/yyyy or dd.mm.yyyy or dd-mm-yyyy\r\n    function isValidDate(s) {\r\n        const separators = ['\\\\.', '\\\\-', '\\\\/'];\r\n        const bits = s.split(new RegExp(separators.join('|'), 'g'));\r\n        const d = new Date(bits[0], bits[1] - 1, bits[2]);\r\n        return (\r\n            d.getFullYear() === parseInt(bits[0], 10) &&\r\n            d.getMonth() + 1 === parseInt(bits[1], 10)\r\n        );\r\n    }\r\n\r\n    useEffect(() => {\r\n        const validator = () => {\r\n            const isValidFirstName = form.firstName.length >= 3;\r\n            const isValidLastName = form.lastName.length >= 3;\r\n            const isValidCardNumber = form.cardNumber.length === 12;\r\n            const isValidExpiration = isValidDate(form.expiration);\r\n            const isValidCvcCode = form.cvcCode > 0;\r\n            if (\r\n                isValidFirstName &&\r\n                isValidLastName &&\r\n                isValidCardNumber &&\r\n                isValidExpiration &&\r\n                isValidCvcCode\r\n            )\r\n                setValidForm(true);\r\n        };\r\n        validator();\r\n    }, [form]);\r\n\r\n    const submitHandler = e => {\r\n        if (validForm) {\r\n            e.preventDefault();\r\n            dispatch(paymentData(form));\r\n            submit();\r\n        }\r\n    };\r\n\r\n    const handlerForm = e => {\r\n        setForm({\r\n            ...form,\r\n            [e.target.name]: e.target.value,\r\n        });\r\n    };\r\n\r\n    return (\r\n        <form className=\"payment-container\">\r\n            <p className=\"payment-method-title\">Payment Method</p>\r\n            <div className=\"payment-method\">\r\n                <div>\r\n                    <img\r\n                        alt=\"img\"\r\n                        src={process.env.PUBLIC_URL + 'images/creditCard.png'}\r\n                    />\r\n                </div>\r\n                <div className=\"payment-method-2\">\r\n                    <img\r\n                        alt=\"img\"\r\n                        src={process.env.PUBLIC_URL + 'images/paypal.png'}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <img\r\n                        alt=\"img\"\r\n                        src={process.env.PUBLIC_URL + 'images/e-wallet.png'}\r\n                    />\r\n                </div>\r\n            </div>\r\n            <div className=\"payment-card-details\">\r\n                <div>\r\n                    <Label for=\"name\">Personal Details</Label>\r\n                    <Input\r\n                        type=\"text\"\r\n                        name=\"firstName\"\r\n                        id=\"name\"\r\n                        placeholder=\"First name\"\r\n                        minLength=\"3\"\r\n                        value={form.firstName}\r\n                        onChange={handlerForm}\r\n                        required\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <Label for=\"lastName\" className=\"payment-dot\">\r\n                        ·\r\n                    </Label>\r\n                    <Input\r\n                        type=\"text\"\r\n                        name=\"lastName\"\r\n                        id=\"examplePassword\"\r\n                        placeholder=\"Last name\"\r\n                        value={form.lastName}\r\n                        onChange={handlerForm}\r\n                        minLength=\"3\"\r\n                        required\r\n                    />\r\n                </div>\r\n            </div>\r\n            <div className=\"payment-card-number\">\r\n                <Label for=\"cardNumber\">Card number</Label>\r\n                <Input\r\n                    type=\"text\"\r\n                    name=\"cardNumber\"\r\n                    id=\"cardNumber\"\r\n                    placeholder=\"Enter card number\"\r\n                    value={form.cardNumber}\r\n                    onChange={handlerForm}\r\n                    minLength=\"12\"\r\n                    maxLength=\"12\"\r\n                    required\r\n                />\r\n            </div>\r\n\r\n            <div className=\"payment-card-details\">\r\n                <div>\r\n                    <Label for=\"expiration\">Expiration</Label>\r\n                    <Input\r\n                        type=\"date\"\r\n                        name=\"expiration\"\r\n                        id=\"expiration\"\r\n                        placeholder=\"Date of expiration\"\r\n                        value={form.expiration}\r\n                        onChange={handlerForm}\r\n                        required\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <Label for=\"cvc\" className=\"payment-cvc\">\r\n                        CVC Code\r\n                    </Label>\r\n                    <Input\r\n                        type=\"number\"\r\n                        name=\"cvcCode\"\r\n                        id=\"cvc\"\r\n                        placeholder=\"Enter CVC Code\"\r\n                        value={form.cvcCode}\r\n                        onChange={handlerForm}\r\n                        min=\"1\"\r\n                        required\r\n                    />\r\n                </div>\r\n            </div>\r\n            <div className=\"checkout-nextBack-buttons\">\r\n                <button\r\n                    type=\"submit\"\r\n                    id=\"checkout-backButton-id\"\r\n                    className=\"checkout-nextButton\"\r\n                    onClick={e => backHandler(e)}\r\n                >\r\n                    Back\r\n                </button>\r\n                <button\r\n                    type=\"submit\"\r\n                    id=\"checkout-nextButton-id\"\r\n                    className=\"checkout-nextButton\"\r\n                    onClick={e => submitHandler(e)}\r\n                >\r\n                    Next\r\n                </button>\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n\r\nPayment.propTypes = {\r\n    submit: PropTypes.func.isRequired,\r\n    backHandler: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Payment;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Modal, ModalBody, ModalFooter } from 'reactstrap';\r\n\r\nconst SummaryModal = props => {\r\n    const { modal, responseText, modalHandler } = props;\r\n    return (\r\n        <Modal isOpen={modal}>\r\n            <ModalBody className=\"summary-modal-body\">\r\n                <div>{responseText}</div>\r\n                <div>\r\n                    <svg\r\n                        className=\"checkmark\"\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                        viewBox=\"0 0 52 52\"\r\n                    >\r\n                        <circle\r\n                            className=\"checkmark__circle\"\r\n                            cx=\"26\"\r\n                            cy=\"26\"\r\n                            r=\"25\"\r\n                            fill=\"none\"\r\n                        />\r\n                        <path\r\n                            className=\"checkmark__check\"\r\n                            fill=\"none\"\r\n                            d=\"M14.1 27.2l7.1 7.2 16.7-16.8\"\r\n                        />\r\n                    </svg>\r\n                </div>\r\n            </ModalBody>\r\n            <ModalFooter className=\"summary-modal-footer\">\r\n                <button onClick={modalHandler} type=\"button\">\r\n                    Go Home\r\n                </button>{' '}\r\n            </ModalFooter>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nSummaryModal.propTypes = {\r\n    modal: PropTypes.bool.isRequired,\r\n    responseText: PropTypes.string.isRequired,\r\n    modalHandler: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default SummaryModal;\r\n","import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Cookies from 'js-cookie';\r\nimport { Spinner } from 'reactstrap';\r\nimport { removeAllProducts } from '../../store/actions/Products';\r\nimport { cleanOrderData } from '../../store/actions/OrderData';\r\nimport SummaryModal from './SummaryModal';\r\n\r\nconst Summary = () => {\r\n    const orderData = useSelector(state => state.orderData);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [modal, setModal] = useState(false);\r\n    const history = useHistory();\r\n    const [responseText, setResponseText] = useState('');\r\n    const dispatch = useDispatch();\r\n    const toggle = () => setModal(!modal);\r\n    const cardNUmber = orderData.paymentData.cardNumber;\r\n    const lasChars = cardNUmber.substr(\r\n        cardNUmber.length - 3,\r\n        cardNUmber.length\r\n    );\r\n    const payHandler = async () => {\r\n        setIsLoading(true);\r\n        const token = Cookies.get('token');\r\n        if (token) {\r\n            const headers = {\r\n                'Content-Type': 'application/json',\r\n                'x-auth-token': token,\r\n            };\r\n            try {\r\n                const res = await axios.post(\r\n                    'http://localhost:3000/api/orders/newOrder',\r\n                    orderData,\r\n                    { headers }\r\n                );\r\n                // eslint-disable-next-line no-console\r\n                console.log(res);\r\n                setResponseText(res.data);\r\n                setIsLoading(false);\r\n                toggle();\r\n            } catch (error) {\r\n                // eslint-disable-next-line no-console\r\n                console.log(error);\r\n                setIsLoading(false);\r\n            }\r\n        }\r\n    };\r\n\r\n    const modalHandler = () => {\r\n        dispatch(cleanOrderData());\r\n        dispatch(removeAllProducts());\r\n        history.push('/');\r\n    };\r\n\r\n    return (\r\n        <div className=\"summary-container\">\r\n            <div className=\"summary-box\">\r\n                <div className=\"summary-imageBox\">\r\n                    <h1>€</h1>\r\n                </div>\r\n                <div className=\"summary-price\">\r\n                    <div>\r\n                        <p>Price</p>\r\n                        <h6>{orderData.price.pvp} €</h6>\r\n                    </div>\r\n                    <div>\r\n                        <p>VAT</p>\r\n                        <h6>{orderData.price.total - orderData.price.pvp} €</h6>\r\n                    </div>\r\n                    <div>\r\n                        <p>Total Price</p>\r\n                        <h6 id=\"summary-total-price-id\">\r\n                            {orderData.price.total} €\r\n                        </h6>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"summary-box\">\r\n                <div className=\"summary-imageBox\">\r\n                    <img\r\n                        src={process.env.PUBLIC_URL + 'images/delivery2.png'}\r\n                        alt=\"img\"\r\n                        width=\"50px\"\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <p>Delivery Address:</p>\r\n                    <p>{orderData.shippingData.address}</p>\r\n                </div>\r\n            </div>\r\n            <div className=\"summary-box\">\r\n                <div className=\"summary-imageBox\">\r\n                    <img\r\n                        src={process.env.PUBLIC_URL + 'images/creditCard.png'}\r\n                        alt=\"img\"\r\n                        width=\"40px\"\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <p>Card Number ends in:</p>\r\n                    <h6>**** **** **** *{lasChars}</h6>\r\n                </div>\r\n            </div>\r\n            <div className=\"summary-pay\">\r\n                <button\r\n                    type=\"submit\"\r\n                    id=\"checkout-pay-id\"\r\n                    className=\"checkout-nextButton\"\r\n                    onClick={payHandler}\r\n                >\r\n                    Pay\r\n                </button>\r\n                {isLoading && (\r\n                    <Spinner color=\"primary\" className=\"summary-spinner\" />\r\n                )}\r\n            </div>\r\n            <SummaryModal\r\n                modal={modal}\r\n                responseText={responseText}\r\n                modalHandler={modalHandler}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Summary;\r\n","import React, { useEffect, useState } from 'react';\r\nimport CheckoutPhases from '../components/checkout/CheckoutPhases';\r\nimport Order from '../components/checkout/Order';\r\nimport Shipping from '../components/checkout/Shipping';\r\nimport Payment from '../components/checkout/Payment';\r\nimport Summary from '../components/checkout/Summary';\r\n\r\nconst Checkout = () => {\r\n    const [phase, setPhase] = useState(1);\r\n\r\n    const backHandler = () => {\r\n        // eslint-disable-next-line no-shadow\r\n        setPhase(phase => (phase -= 1));\r\n        window.scrollTo(0, 0);\r\n    };\r\n\r\n    useEffect(() => {\r\n        const calculate = () => {\r\n            const header = document.getElementById('Header-container-id');\r\n            header.style.position = 'absolute';\r\n            const heightDimension =\r\n                window.innerWidth < 370\r\n                    ? window.innerHeight * 0.85\r\n                    : window.innerHeight * 0.88;\r\n            const element = document.getElementById('checkout-container-id');\r\n            // element.style.height = heightDimension + 'px';\r\n            element.style.minHeight =\r\n                heightDimension > 700 ? '700px' : heightDimension + 'px';\r\n        };\r\n        window.addEventListener('resize', calculate);\r\n        calculate();\r\n        return () => {\r\n            window.removeEventListener('resize', calculate);\r\n        };\r\n    }, []);\r\n\r\n    const phaseHandler = () => {\r\n        // eslint-disable-next-line no-shadow\r\n        setPhase(phase => (phase += 1));\r\n        window.scrollTo(0, 0);\r\n    };\r\n\r\n    let Phase = <Order />;\r\n    switch (phase) {\r\n        case 1:\r\n            Phase = <Order nextPhase={phaseHandler} />;\r\n            break;\r\n        case 2:\r\n            Phase = (\r\n                <Shipping submit={phaseHandler} backHandler={backHandler} />\r\n            );\r\n            break;\r\n        case 3:\r\n            Phase = <Payment submit={phaseHandler} backHandler={backHandler} />;\r\n            break;\r\n        case 4:\r\n            Phase = <Summary />;\r\n            break;\r\n        default:\r\n    }\r\n    return (\r\n        <div className=\"checkout-container\" id=\"checkout-container-id\">\r\n            <div className=\"checkout-pahses\">\r\n                <CheckoutPhases phase={phase} />\r\n            </div>\r\n            <div className=\"checkout-content\">{Phase}</div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Checkout;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { FormGroup, Input, Spinner } from 'reactstrap';\r\n\r\nconst Auth = props => {\r\n    const {\r\n        displayError,\r\n        errorMsg,\r\n        setDisplayError,\r\n        password,\r\n        passwordHandler,\r\n        nextButtonHandler,\r\n        isLoading,\r\n    } = props;\r\n\r\n    return (\r\n        <div className=\"settings-auth\">\r\n            <h4 className=\"settings-title\">Introduce Password</h4>\r\n            {displayError && (\r\n                <div className=\"login-errorBox\">\r\n                    <span>{errorMsg}</span>\r\n                    <span role=\"button\" onClick={() => setDisplayError(false)}>\r\n                        X\r\n                    </span>\r\n                </div>\r\n            )}\r\n            <FormGroup>\r\n                <Input\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    id=\"examplePassword\"\r\n                    value={password}\r\n                    onChange={passwordHandler}\r\n                    required\r\n                />\r\n            </FormGroup>\r\n            <button type=\"button\" onClick={nextButtonHandler}>\r\n                Next\r\n            </button>\r\n            {isLoading && <Spinner color=\"primary\" />}\r\n        </div>\r\n    );\r\n};\r\n\r\nAuth.propTypes = {\r\n    displayError: PropTypes.bool.isRequired,\r\n    errorMsg: PropTypes.string.isRequired,\r\n    setDisplayError: PropTypes.func.isRequired,\r\n    password: PropTypes.string.isRequired,\r\n    passwordHandler: PropTypes.func.isRequired,\r\n    nextButtonHandler: PropTypes.func.isRequired,\r\n    isLoading: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default Auth;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Form, FormGroup, Label, Input, Spinner } from 'reactstrap';\r\n\r\nconst SettingsForm = props => {\r\n    const {\r\n        displayError,\r\n        errorMsg,\r\n        setDisplayError,\r\n        form,\r\n        formHandler,\r\n        changeInfoHandler,\r\n        isLoading,\r\n        passwordForm,\r\n        passwordFormHandler,\r\n        changePasswordHandler,\r\n        switchModal,\r\n    } = props;\r\n\r\n    return (\r\n        <div className=\"settings-container\">\r\n            <h4 className=\"settings-title\">Personal Information</h4>\r\n            {displayError && (\r\n                <div className=\"login-errorBox\">\r\n                    <span>{errorMsg}</span>\r\n                    <span role=\"button\" onClick={() => setDisplayError(false)}>\r\n                        X\r\n                    </span>\r\n                </div>\r\n            )}\r\n            <Form className=\"shipping-container\">\r\n                <FormGroup>\r\n                    <Label for=\"examplePassword\">First Name</Label>\r\n                    <Input\r\n                        type=\"text\"\r\n                        name=\"firstName\"\r\n                        id=\"examplePassword\"\r\n                        value={form.firstName}\r\n                        minLength=\"3\"\r\n                        onChange={formHandler}\r\n                        required\r\n                    />\r\n                </FormGroup>\r\n                <FormGroup>\r\n                    <Label for=\"exampleSelect\">Last Name</Label>\r\n                    <Input\r\n                        type=\"text\"\r\n                        name=\"lastName\"\r\n                        id=\"examplePassword\"\r\n                        value={form.lastName}\r\n                        minLength=\"3\"\r\n                        onChange={formHandler}\r\n                        required\r\n                    />\r\n                </FormGroup>\r\n                <FormGroup>\r\n                    <Label for=\"examplePassword\">Email</Label>\r\n                    <Input\r\n                        type=\"email\"\r\n                        name=\"email\"\r\n                        id=\"examplePassword\"\r\n                        value={form.email}\r\n                        pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,}$\"\r\n                        onChange={formHandler}\r\n                        required\r\n                    />\r\n                </FormGroup>\r\n                <button type=\"submit\" onClick={changeInfoHandler}>\r\n                    Change Info\r\n                </button>\r\n                {isLoading && (\r\n                    <Spinner color=\"primary\" className=\"settings-spinner\" />\r\n                )}\r\n            </Form>\r\n            <Form\r\n                className=\"shipping-container\"\r\n                id=\"settings-changePassword-id\"\r\n            >\r\n                <FormGroup>\r\n                    <Label for=\"examplePassword\">New Password</Label>\r\n                    <Input\r\n                        type=\"password\"\r\n                        name=\"password\"\r\n                        id=\"examplePassword\"\r\n                        value={passwordForm.password}\r\n                        minLength=\"8\"\r\n                        pattern=\"(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}\"\r\n                        onChange={passwordFormHandler}\r\n                        required\r\n                    />\r\n                </FormGroup>\r\n                <FormGroup>\r\n                    <Label for=\"examplePassword\">Confirm Password</Label>\r\n                    <Input\r\n                        type=\"password\"\r\n                        name=\"confirmPassword\"\r\n                        id=\"examplePassword\"\r\n                        minLength=\"8\"\r\n                        value={passwordForm.confirmPassword}\r\n                        pattern={passwordForm.password}\r\n                        title=\"Must match the previous entry.\"\r\n                        onChange={passwordFormHandler}\r\n                        required\r\n                    />\r\n                </FormGroup>\r\n                <button type=\"submit\" onClick={changePasswordHandler}>\r\n                    Change Password\r\n                </button>\r\n                {isLoading && (\r\n                    <Spinner color=\"primary\" className=\"settings-spinner\" />\r\n                )}\r\n            </Form>\r\n            <button\r\n                type=\"button\"\r\n                className=\"settings-deleteButton\"\r\n                onClick={switchModal}\r\n            >\r\n                Delete Account\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nSettingsForm.propTypes = {\r\n    displayError: PropTypes.bool.isRequired,\r\n    errorMsg: PropTypes.string.isRequired,\r\n    setDisplayError: PropTypes.func.isRequired,\r\n    // eslint-disable-next-line react/forbid-prop-types\r\n    form: PropTypes.object.isRequired,\r\n    formHandler: PropTypes.func.isRequired,\r\n    changeInfoHandler: PropTypes.func.isRequired,\r\n    isLoading: PropTypes.bool.isRequired,\r\n    // eslint-disable-next-line react/forbid-prop-types\r\n    passwordForm: PropTypes.object.isRequired,\r\n    passwordFormHandler: PropTypes.func.isRequired,\r\n    changePasswordHandler: PropTypes.func.isRequired,\r\n    switchModal: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default SettingsForm;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Modal, ModalBody, ModalFooter } from 'reactstrap';\r\n\r\nconst ModalSettings = props => {\r\n    const { modal, deleteAccModal, modalHandler, deleteAccountHandler } = props;\r\n    return (\r\n        <Modal isOpen={modal}>\r\n            <ModalBody className=\"summary-modal-body\">\r\n                <div>\r\n                    {deleteAccModal ? (\r\n                        <p>Are your sore you want to delete the account</p>\r\n                    ) : (\r\n                        <p>Your data has been updated successfully</p>\r\n                    )}\r\n                </div>\r\n                <div>\r\n                    <svg\r\n                        className=\"checkmark\"\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                        viewBox=\"0 0 52 52\"\r\n                    >\r\n                        <circle\r\n                            className=\"checkmark__circle\"\r\n                            cx=\"26\"\r\n                            cy=\"26\"\r\n                            r=\"25\"\r\n                            fill=\"none\"\r\n                        />\r\n                        <path\r\n                            className=\"checkmark__check\"\r\n                            fill=\"none\"\r\n                            d=\"M14.1 27.2l7.1 7.2 16.7-16.8\"\r\n                        />\r\n                    </svg>\r\n                </div>\r\n            </ModalBody>\r\n            <ModalFooter className=\"summary-modal-footer\">\r\n                {!deleteAccModal ? (\r\n                    <div>\r\n                        <button type=\"button\" onClick={modalHandler}>\r\n                            Go Home\r\n                        </button>\r\n                    </div>\r\n                ) : (\r\n                    <button type=\"button\" onClick={deleteAccountHandler}>\r\n                        Delete Account\r\n                    </button>\r\n                )}\r\n            </ModalFooter>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nModalSettings.propTypes = {\r\n    modal: PropTypes.bool.isRequired,\r\n    deleteAccModal: PropTypes.bool.isRequired,\r\n    modalHandler: PropTypes.func.isRequired,\r\n    deleteAccountHandler: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ModalSettings;\r\n","/* eslint-disable no-console */\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport Auth from '../components/settings/Auth';\r\nimport SettingsForm from '../components/settings/SettingsForm';\r\nimport ModalSettings from '../components/settings/ModalSettings';\r\n\r\nconst Settings = () => {\r\n    const [password, setPassword] = useState('');\r\n    const [validForm, setValidForm] = useState(false);\r\n    const [validPassForm, setValidPassForm] = useState(false);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [deleteAccModal, setDeleteAccModal] = useState(false);\r\n    const [modal, setModal] = useState(false);\r\n    const [errorMsg, setErrorMsg] = useState('');\r\n    const [displayError, setDisplayError] = useState(false);\r\n    const history = useHistory();\r\n    const _id = useSelector(state => state.auth.userId);\r\n    const [isDataVisible, setIsDataVisible] = useState(false);\r\n    const [form, setForm] = useState({\r\n        firstName: '',\r\n        lastName: '',\r\n        email: '',\r\n    });\r\n    const [passwordForm, setPasswordForm] = useState({\r\n        password: '',\r\n        confirmPassword: '',\r\n    });\r\n\r\n    const toggle = () => setModal(!modal);\r\n\r\n    const passwordHandler = e => setPassword(e.target.value);\r\n\r\n    const nextButtonHandler = async () => {\r\n        setIsLoading(true);\r\n        try {\r\n            const res = await axios.post('http://localhost:3000/api/user/me', {\r\n                password,\r\n                _id,\r\n            });\r\n            setForm({\r\n                ...form,\r\n                firstName: res.data.firstName,\r\n                lastName: res.data.lastName,\r\n                email: res.data.email,\r\n            });\r\n            setIsLoading(false);\r\n            setIsDataVisible(true);\r\n        } catch (error) {\r\n            setIsLoading(false);\r\n            setDisplayError(true);\r\n            setErrorMsg(error.response.data);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        const validator = () => {\r\n            const isValidFirstName = form.firstName.length >= 3;\r\n            const isValidLastName = form.lastName.length >= 3;\r\n            const isValidEmail = /[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,}$/.test(\r\n                form.email\r\n            );\r\n            if (isValidFirstName && isValidLastName && isValidEmail) {\r\n                setValidForm(true);\r\n            } else {\r\n                setValidForm(false);\r\n            }\r\n        };\r\n\r\n        validator();\r\n    }, [form]);\r\n\r\n    useEffect(() => {\r\n        const validator = () => {\r\n            const isValidPass =\r\n                passwordForm.password.length >= 8 &&\r\n                /\\d/.test(passwordForm.password) &&\r\n                /[a-z]/.test(passwordForm.password) &&\r\n                /[A-Z]/.test(passwordForm.password);\r\n            const isValidConfirPass =\r\n                passwordForm.confirmPassword === passwordForm.password;\r\n\r\n            isValidPass && isValidConfirPass\r\n                ? setValidPassForm(true)\r\n                : setValidPassForm(false);\r\n        };\r\n\r\n        validator();\r\n    }, [passwordForm]);\r\n\r\n    const formHandler = e => {\r\n        setForm({\r\n            ...form,\r\n            [e.target.name]: e.target.value,\r\n        });\r\n    };\r\n\r\n    const passwordFormHandler = e => {\r\n        setPasswordForm({\r\n            ...passwordForm,\r\n            [e.target.name]: e.target.value,\r\n        });\r\n    };\r\n\r\n    const changeInfoHandler = async e => {\r\n        if (validForm) {\r\n            e.preventDefault();\r\n            setIsLoading(true);\r\n            try {\r\n                const res = await axios.put(\r\n                    `http://localhost:3000/api/user/${_id}`,\r\n                    { ...form, password }\r\n                );\r\n                console.log(res);\r\n                setIsLoading(false);\r\n                setIsDataVisible(true);\r\n                toggle();\r\n            } catch (error) {\r\n                setIsLoading(false);\r\n                setDisplayError(true);\r\n                setErrorMsg(error.response.data);\r\n            }\r\n        }\r\n    };\r\n\r\n    const changePasswordHandler = async e => {\r\n        if (validPassForm) {\r\n            e.preventDefault();\r\n            setIsLoading(true);\r\n            try {\r\n                const res = await axios.put(\r\n                    `http://localhost:3000/api/user/${_id}`,\r\n                    { ...form, password: passwordForm.password }\r\n                );\r\n                console.log(res);\r\n                setIsLoading(false);\r\n                setIsDataVisible(true);\r\n                toggle();\r\n            } catch (error) {\r\n                setDisplayError(true);\r\n                setIsLoading(false);\r\n                setErrorMsg(error.response.data);\r\n            }\r\n        }\r\n    };\r\n\r\n    const deleteAccountHandler = async () => {\r\n        try {\r\n            const res = await axios.delete(\r\n                `http://localhost:3000/api/user/${_id}`\r\n            );\r\n            console.log(res);\r\n            setIsLoading(false);\r\n            setIsDataVisible(true);\r\n            toggle();\r\n            history.push('/');\r\n        } catch (error) {\r\n            setDisplayError(true);\r\n            setIsLoading(false);\r\n            setErrorMsg(error.response.data);\r\n        }\r\n    };\r\n\r\n    const modalHandler = () => history.push('/');\r\n\r\n    const switchModal = () => {\r\n        toggle();\r\n        setDeleteAccModal(true);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {!isDataVisible ? (\r\n                <Auth\r\n                    displayError={displayError}\r\n                    errorMsg={errorMsg}\r\n                    setDisplayError={setDisplayError}\r\n                    password={password}\r\n                    passwordHandler={passwordHandler}\r\n                    nextButtonHandler={nextButtonHandler}\r\n                    isLoading={isLoading}\r\n                />\r\n            ) : (\r\n                <SettingsForm\r\n                    displayError={displayError}\r\n                    errorMsg={errorMsg}\r\n                    setDisplayError={setDisplayError}\r\n                    form={form}\r\n                    formHandler={formHandler}\r\n                    changeInfoHandler={changeInfoHandler}\r\n                    isLoading={isLoading}\r\n                    passwordForm={passwordForm}\r\n                    passwordFormHandler={passwordFormHandler}\r\n                    changePasswordHandler={changePasswordHandler}\r\n                    switchModal={switchModal}\r\n                />\r\n            )}\r\n            <ModalSettings\r\n                modal={modal}\r\n                deleteAccModal={deleteAccModal}\r\n                modalHandler={modalHandler}\r\n                deleteAccountHandler={deleteAccountHandler}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Settings;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Box = props => {\r\n    const { viewOrder, date, price, id } = props;\r\n\r\n    return (\r\n        <div className=\"orders-orderBox\">\r\n            <div className=\"orders-orderBox-header\">\r\n                <p>Order 1</p>\r\n                <div className=\"orders-orderBox-header-status\">\r\n                    <p>Order Delivered</p>\r\n                </div>\r\n            </div>\r\n            <div className=\"orders-orderInfo\">\r\n                <div>\r\n                    <p>Order Date:</p>\r\n                    <p>Delivery Time:</p>\r\n                    <p className=\"orders-orderInfo-prcie\">Total Price:</p>\r\n                </div>\r\n                <div className=\"orders-orderInfo-values\">\r\n                    <p>{date}</p>\r\n                    <p>13th April</p>\r\n                    <p className=\"orders-orderInfo-values-price\">${price}</p>\r\n                </div>\r\n            </div>\r\n            <button\r\n                className=\"orders-orderBox-button\"\r\n                type=\"button\"\r\n                onClick={() => viewOrder(id)}\r\n            >\r\n                View order\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nBox.propTypes = {\r\n    id: PropTypes.number.isRequired,\r\n    viewOrder: PropTypes.func.isRequired,\r\n    price: PropTypes.number.isRequired,\r\n    date: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Box;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Product2 = props => {\r\n    const { name, price, image, quantity, measure } = props;\r\n\r\n    return (\r\n        <div className=\"orderItems-product\">\r\n            <div className=\"orderItems-image\">\r\n                <img\r\n                    src={process.env.PUBLIC_URL + `images/products/${image}`}\r\n                    alt=\"img\"\r\n                />\r\n            </div>\r\n            <div className=\"orderItems-product-description\">\r\n                <p className=\"orderItems-product-description-name\">\r\n                    <b>{name}</b>\r\n                </p>\r\n                <p className=\"orderItems-product-description-price\">\r\n                    {measure}, {price}€/und.\r\n                </p>\r\n            </div>\r\n            <div className=\"order-product-description-buttons\">\r\n                <div>{quantity}</div>\r\n            </div>\r\n            <div className=\"orderItems-product-price-total\">\r\n                {(price * quantity).toFixed(2)} €\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nProduct2.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    price: PropTypes.number.isRequired,\r\n    image: PropTypes.string.isRequired,\r\n    quantity: PropTypes.number.isRequired,\r\n    measure: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Product2;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Product from './Product';\r\n\r\nconst OrderItems = props => {\r\n    const { products } = props;\r\n\r\n    return (\r\n        <div className=\"orderItems-container\">\r\n            <div className=\"orderItems-products-header\" id=\"prueba4\">\r\n                <p className=\"orderItems-products-header-description\">\r\n                    Description\r\n                </p>\r\n                <p className=\"orderItems-products-header-qty\">Qty</p>\r\n                <p className=\"orderItems-products-header-total\">Price</p>\r\n            </div>\r\n            <div className=\"orderItems-products-list\" id=\"prueba5\">\r\n                {products.map(product => (\r\n                    <Product\r\n                        key={product._id}\r\n                        id={product._id}\r\n                        name={product.name}\r\n                        group={product.group}\r\n                        description={product.description}\r\n                        price={product.price}\r\n                        image={product.image}\r\n                        quantity={product.quantity}\r\n                        measure={product.measure}\r\n                    />\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nOrderItems.propTypes = {\r\n    // eslint-disable-next-line react/forbid-prop-types\r\n    products: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default OrderItems;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Progress } from 'reactstrap';\r\nimport OrderItems from './OrderItems';\r\n\r\nconst OrderDetails = props => {\r\n    const { boxToggle, orderInfo } = props;\r\n    const {\r\n        DeliveryAddress,\r\n        OrderDate,\r\n        DeliveryTime,\r\n        SubTotal,\r\n        DeliveryFee,\r\n        Total,\r\n        products,\r\n    } = orderInfo;\r\n\r\n    return (\r\n        <div className=\"orders-orderDetails\" id=\"prueba\">\r\n            <div className=\"orders-orderDetails-up\" id=\"prueba2\">\r\n                <div className=\"orders-orderDetails-title\">\r\n                    <h4>Order Details</h4>\r\n                    <button onClick={boxToggle} type=\"button\">\r\n                        X\r\n                    </button>\r\n                </div>\r\n                <div className=\"orders-delivery-info\">\r\n                    <div className=\"orders-delivery-info-1\">\r\n                        <div>\r\n                            <p>Delivery Address:</p>\r\n                            <p>Order Date: </p>\r\n                            <p>Delivery Time: </p>\r\n                        </div>\r\n                        <div>\r\n                            <p>{DeliveryAddress}</p>\r\n                            <p>{OrderDate}</p>\r\n                            <p>{DeliveryTime}</p>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"orders-delivery-info-2\">\r\n                        <div>\r\n                            <p>Sub Total</p>\r\n                            <p>Delivery Fee</p>\r\n                            <p>Total</p>\r\n                        </div>\r\n                        <div>\r\n                            <p>{SubTotal}</p>\r\n                            <p>{DeliveryFee}</p>\r\n                            <p>{Total}</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"orders-deliveryStatus\">\r\n                    <div className=\"orders-steps\">\r\n                        <div className=\"orders-circle orders-ticked\">\r\n                            <img\r\n                                src={\r\n                                    process.env.PUBLIC_URL + 'images/tick2.png'\r\n                                }\r\n                                className=\"orders-tick\"\r\n                                alt=\"img\"\r\n                            />\r\n                        </div>\r\n                        <div className=\"orders-circle orders-ticked\">\r\n                            <img\r\n                                src={\r\n                                    process.env.PUBLIC_URL + 'images/tick2.png'\r\n                                }\r\n                                className=\"orders-tick\"\r\n                                alt=\"img\"\r\n                            />\r\n                        </div>\r\n                        <div className=\"orders-circle\">3</div>\r\n                    </div>\r\n                    <Progress value={50} className=\"orders-progress\" />\r\n                    <div className=\"orders-steps\">\r\n                        <p>Order Recived</p>\r\n                        <p>Order On The Way</p>\r\n                        <p>Order Delivered</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"orders-orderDetails-down\" id=\"prueba3\">\r\n                <OrderItems products={products} />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nOrderDetails.propTypes = {\r\n    boxToggle: PropTypes.func.isRequired,\r\n    // eslint-disable-next-line react/forbid-prop-types\r\n    orderInfo: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default OrderDetails;\r\n","import Axios from 'axios';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport Cookies from 'js-cookie';\r\nimport Box from '../components/orders/box';\r\nimport OrderDetails from '../components/orders/OrderDetails';\r\n\r\nconst Orders = () => {\r\n    const [isvisible, setIsVisible] = useState(true);\r\n    const [orderInfo, setOrderInfo] = useState({\r\n        DeliveryAddress: false,\r\n        OrderDate: false,\r\n        DeliveryTime: false,\r\n        SubTotal: false,\r\n        DeliveryFee: false,\r\n        Total: false,\r\n        products: [],\r\n    });\r\n    const boxClose = () => setIsVisible(false);\r\n    const userId = useSelector(state => state.auth.userId);\r\n    const [orders, setOrders] = useState([]);\r\n\r\n    const handleUserKeyPress = () => {\r\n        const box = document.getElementById('prueba');\r\n        const up = document.getElementById('prueba2');\r\n        const down = document.getElementById('prueba3');\r\n        const result = box && up && box.offsetHeight - up.offsetHeight;\r\n        if (down) down.style.height = `${result - 20}px`;\r\n    };\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            try {\r\n                const token = Cookies.get('token');\r\n                const headers = {\r\n                    'Content-Type': 'application/json',\r\n                    'x-auth-token': token,\r\n                };\r\n                const req = await Axios.post(\r\n                    'http://localhost:3000/api/orders',\r\n                    {\r\n                        userId,\r\n                    },\r\n                    { headers }\r\n                );\r\n                setOrders([...req.data]);\r\n            } catch (error) {\r\n                // eslint-disable-next-line no-console\r\n                console.log(error);\r\n            }\r\n        }\r\n        fetchData();\r\n    }, [userId]);\r\n\r\n    useEffect(() => {\r\n        window.addEventListener('resize', handleUserKeyPress);\r\n        handleUserKeyPress();\r\n        return () => {\r\n            window.removeEventListener('resize', handleUserKeyPress);\r\n        };\r\n    }, [handleUserKeyPress]);\r\n\r\n    const boxOpen = id => {\r\n        setIsVisible(true);\r\n        const orderData = orders[id];\r\n        setOrderInfo({\r\n            ...orderInfo,\r\n            DeliveryAddress: orderData.shippingData.address,\r\n            OrderDate: orderData.dateOrder,\r\n            DeliveryTime: false,\r\n            SubTotal: orderData.price.pvp,\r\n            DeliveryFee: false,\r\n            Total: orderData.price.total,\r\n            products: orderData.products.map(product => ({ ...product })),\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div className=\"orders-container\">\r\n            <div className=\"orders-ordersList\">\r\n                <h4>My Orders</h4>\r\n                {orders.map((order, i) => (\r\n                    <Box\r\n                        // eslint-disable-next-line react/no-array-index-key\r\n                        key={i}\r\n                        id={i}\r\n                        price={order.price.total}\r\n                        date={order.dateOrder}\r\n                        viewOrder={id => boxOpen(id)}\r\n                    />\r\n                ))}\r\n            </div>\r\n            {isvisible && (\r\n                <OrderDetails boxToggle={boxClose} orderInfo={orderInfo} />\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Orders;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Form, FormGroup, Label, Input, Spinner } from 'reactstrap';\r\n\r\nconst SignIn = props => {\r\n    const { signInForm, signInFormHandler, submitHandler, isLoading } = props;\r\n    return (\r\n        <Form className=\"login-form\">\r\n            <FormGroup>\r\n                <Label for=\"email\">Your email</Label>\r\n                <Input\r\n                    type=\"email\"\r\n                    name=\"email\"\r\n                    id=\"login-input-email\"\r\n                    placeholder=\"Enter your email\"\r\n                    value={signInForm.email}\r\n                    onChange={e => signInFormHandler(e)}\r\n                    pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,}$\"\r\n                    title=\"'characters@characters.domain'\"\r\n                    required\r\n                />\r\n            </FormGroup>\r\n            <FormGroup>\r\n                <Label>Your password</Label>\r\n                <Input\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    placeholder=\"Enter your password\"\r\n                    value={signInForm.password}\r\n                    onChange={e => signInFormHandler(e)}\r\n                    required\r\n                />\r\n            </FormGroup>\r\n            <button onClick={e => submitHandler(e)} type=\"submit\">\r\n                LOGIN\r\n            </button>\r\n            {isLoading && <Spinner color=\"primary\" className=\"login-spinner\" />}\r\n        </Form>\r\n    );\r\n};\r\n\r\nSignIn.propTypes = {\r\n    // eslint-disable-next-line react/forbid-prop-types\r\n    signInForm: PropTypes.object.isRequired,\r\n    signInFormHandler: PropTypes.func.isRequired,\r\n    submitHandler: PropTypes.func.isRequired,\r\n    isLoading: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default SignIn;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Form, FormGroup, Label, Input, Spinner } from 'reactstrap';\r\n\r\nconst SignUp = props => {\r\n    const { signUpForm, signUpFormHandler, submitHandler, isLoading } = props;\r\n    return (\r\n        <Form className=\"login-form\">\r\n            <FormGroup>\r\n                <Label>First Name</Label>\r\n                <Input\r\n                    type=\"text\"\r\n                    name=\"firstName\"\r\n                    placeholder=\"Enter your first name\"\r\n                    value={signUpForm.firstName}\r\n                    onChange={signUpFormHandler}\r\n                    minLength=\"3\"\r\n                    required\r\n                />\r\n            </FormGroup>\r\n            <FormGroup>\r\n                <Label>Last Name</Label>\r\n                <Input\r\n                    type=\"text\"\r\n                    name=\"lastName\"\r\n                    placeholder=\"Enter your last name\"\r\n                    value={signUpForm.lastName}\r\n                    onChange={signUpFormHandler}\r\n                    minLength=\"3\"\r\n                    required\r\n                />\r\n            </FormGroup>\r\n            <FormGroup>\r\n                <Label>Your email</Label>\r\n                <Input\r\n                    type=\"email\"\r\n                    name=\"email\"\r\n                    placeholder=\"Enter your email\"\r\n                    pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,}$\"\r\n                    title=\"'characters@characters.domain'\"\r\n                    value={signUpForm.email}\r\n                    onChange={signUpFormHandler}\r\n                    required\r\n                />\r\n            </FormGroup>\r\n            <FormGroup>\r\n                <Label>Confirm email</Label>\r\n                <Input\r\n                    type=\"email\"\r\n                    name=\"confirmEmail\"\r\n                    placeholder=\"Confirm your email\"\r\n                    pattern={signUpForm.email}\r\n                    title=\"Must match the previous entry.\"\r\n                    value={signUpForm.confirmEmail}\r\n                    onChange={signUpFormHandler}\r\n                    required\r\n                />\r\n            </FormGroup>\r\n            <FormGroup>\r\n                <Label>Your password</Label>\r\n                <Input\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    id=\"login-input-password\"\r\n                    placeholder=\"Enter your Password\"\r\n                    value={signUpForm.password}\r\n                    onChange={signUpFormHandler}\r\n                    minLength=\"8\"\r\n                    pattern=\"(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}\"\r\n                    required\r\n                />\r\n            </FormGroup>\r\n            <FormGroup>\r\n                <Label>Confirm password</Label>\r\n                <Input\r\n                    type=\"password\"\r\n                    name=\"confirmPassword\"\r\n                    placeholder=\"Confirm Password\"\r\n                    value={signUpForm.confirmPassword}\r\n                    onChange={signUpFormHandler}\r\n                    minLength=\"8\"\r\n                    pattern={signUpForm.password}\r\n                    title=\"Must match the previous entry.\"\r\n                    required\r\n                />\r\n            </FormGroup>\r\n            <button onClick={e => submitHandler(e)} type=\"submit\">\r\n                CREATE ACCOUNT\r\n            </button>\r\n            {isLoading && <Spinner color=\"primary\" className=\"login-spinner\" />}\r\n        </Form>\r\n    );\r\n};\r\n\r\nSignUp.propTypes = {\r\n    // eslint-disable-next-line react/forbid-prop-types\r\n    signUpForm: PropTypes.object.isRequired,\r\n    signUpFormHandler: PropTypes.func.isRequired,\r\n    submitHandler: PropTypes.func.isRequired,\r\n    isLoading: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default SignUp;\r\n","/* eslint-disable jsx-a11y/no-noninteractive-element-interactions */\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\nimport axios from 'axios';\r\nimport Cookies from 'js-cookie';\r\nimport { signInSuccess } from '../store/actions/auth';\r\nimport SignIn from '../components/auth/SignIn';\r\nimport SignUp from '../components/auth/SignUp';\r\n\r\nconst Auth = () => {\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const [validForm, setValidForm] = useState(false);\r\n    const [isSignIn, setisSignIn] = useState('login-switch-id-1');\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [displayError, setDisplayError] = useState(false);\r\n    const [errorMsg, setErrorMsg] = useState('');\r\n    const [signInForm, setSignInForm] = useState({\r\n        password: '',\r\n        email: '',\r\n    });\r\n    const [signUpForm, setSignUpForm] = useState({\r\n        firstName: '',\r\n        lastName: '',\r\n        password: '',\r\n        confirmPassword: '',\r\n        email: '',\r\n        confirmEmail: '',\r\n    });\r\n\r\n    const submitHandler = async e => {\r\n        if (validForm) {\r\n            e.preventDefault();\r\n            setIsLoading(true);\r\n            const data =\r\n                isSignIn === 'login-switch-id-1'\r\n                    ? signInForm\r\n                    : {\r\n                          firstName: signUpForm.firstName,\r\n                          lastName: signUpForm.lastName,\r\n                          password: signUpForm.password,\r\n                          email: signUpForm.email,\r\n                      };\r\n            const url =\r\n                isSignIn === 'login-switch-id-1'\r\n                    ? 'http://localhost:3000/api/auth'\r\n                    : 'http://localhost:3000/api/user';\r\n            try {\r\n                const res = await axios.post(url, data);\r\n                const { firstName, lastName, email, _id, token } = res.data;\r\n                Cookies.set('token', token);\r\n                dispatch(signInSuccess(token, firstName, lastName, email, _id));\r\n                setIsLoading(false);\r\n                history.push('/');\r\n            } catch (error) {\r\n                setIsLoading(false);\r\n                setDisplayError(true);\r\n                setErrorMsg(error.response.data);\r\n            }\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        const validator = () => {\r\n            if (isSignIn === 'login-switch-id-2') {\r\n                const isValidFirstName = signUpForm.firstName.length >= 3;\r\n                const isValidLastName = signUpForm.lastName.length >= 3;\r\n                const isValidPass =\r\n                    signUpForm.password.length >= 8 &&\r\n                    /\\d/.test(signUpForm.password) &&\r\n                    /[a-z]/.test(signUpForm.password) &&\r\n                    /[A-Z]/.test(signUpForm.password);\r\n                const isValidConfirPass =\r\n                    signUpForm.confirmPassword === signUpForm.password;\r\n                const isValidEmail = /[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,}$/.test(\r\n                    signUpForm.email\r\n                );\r\n                const isValidConfirmEmail =\r\n                    signUpForm.confirmEmail === signUpForm.email;\r\n                if (\r\n                    isValidFirstName &&\r\n                    isValidLastName &&\r\n                    isValidPass &&\r\n                    isValidConfirPass &&\r\n                    isValidConfirmEmail &&\r\n                    isValidEmail\r\n                ) {\r\n                    setValidForm(true);\r\n                } else {\r\n                    setValidForm(false);\r\n                }\r\n            } else {\r\n                const isValidEmail = /[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,}$/.test(\r\n                    signInForm.email\r\n                );\r\n                isValidEmail ? setValidForm(true) : setValidForm(false);\r\n            }\r\n        };\r\n\r\n        validator();\r\n    }, [signInForm, signUpForm, isSignIn]);\r\n\r\n    const signInFormHandler = e => {\r\n        setSignInForm({\r\n            ...signInForm,\r\n            [e.target.name]: e.target.value,\r\n        });\r\n    };\r\n\r\n    const signUpFormHandler = e => {\r\n        setSignUpForm({\r\n            ...signUpForm,\r\n            [e.target.name]: e.target.value,\r\n        });\r\n    };\r\n\r\n    const switchHandler = e => {\r\n        const elem1 = document.getElementById('login-switch-id-1');\r\n        const elem2 = document.getElementById('login-switch-id-2');\r\n        elem1.classList.remove('login-switch-style');\r\n        elem2.classList.remove('login-switch-style');\r\n        e.target.classList.add('login-switch-style');\r\n        setisSignIn(e.target.id);\r\n        setSignInForm({\r\n            password: '',\r\n            email: '',\r\n        });\r\n        setSignUpForm({\r\n            firstName: '',\r\n            lastName: '',\r\n            password: '',\r\n            confirmPassword: '',\r\n            email: '',\r\n            confirmEmail: '',\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div className=\"login-container\">\r\n            <div className=\"login-switch\">\r\n                <h3\r\n                    id=\"login-switch-id-1\"\r\n                    className=\"login-switch-title login-switch-style\"\r\n                    onClick={switchHandler}\r\n                >\r\n                    Sign in\r\n                </h3>\r\n                <h3\r\n                    id=\"login-switch-id-2\"\r\n                    className=\"login-switch-title\"\r\n                    onClick={switchHandler}\r\n                >\r\n                    Sign up\r\n                </h3>\r\n            </div>\r\n            {displayError && (\r\n                <div className=\"login-errorBox\">\r\n                    <span>{errorMsg}</span>\r\n                    <span role=\"button\" onClick={() => setDisplayError(false)}>\r\n                        X\r\n                    </span>\r\n                </div>\r\n            )}\r\n\r\n            {isSignIn === 'login-switch-id-1' ? (\r\n                <SignIn\r\n                    signInForm={signInForm}\r\n                    signInFormHandler={e => signInFormHandler(e)}\r\n                    submitHandler={e => submitHandler(e)}\r\n                    isLoading={isLoading}\r\n                />\r\n            ) : (\r\n                <SignUp\r\n                    signUpForm={signUpForm}\r\n                    signUpFormHandler={e => signUpFormHandler(e)}\r\n                    submitHandler={e => submitHandler(e)}\r\n                    isLoading={isLoading}\r\n                />\r\n            )}\r\n            {isSignIn === 'login-switch-id-1' && (\r\n                <p className=\"login-forgot-passowrd\">Forgot Password?</p>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Auth;\r\n","import React from 'react';\r\nimport { Route, Switch, withRouter } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport Home from '../pages/Home';\r\nimport Checkout from '../pages/Checkout';\r\nimport Settings from '../pages/Settings';\r\nimport Orders from '../pages/Orders';\r\nimport Auth from '../pages/Auth';\r\n\r\nconst Routes = () => {\r\n    const token = useSelector(state => state.auth.token);\r\n    return (\r\n        <div className=\"routes\">\r\n            <div>\r\n                <Switch>\r\n                    <Route path=\"/legume\">\r\n                        <Home group=\"legumes\" />\r\n                    </Route>\r\n                    <Route path=\"/meat\">\r\n                        <Home group=\"meat\" />\r\n                    </Route>\r\n                    <Route path=\"/vegetables\">\r\n                        <Home group=\"vegetables\" />\r\n                    </Route>\r\n                    <Route path=\"/fruits\">\r\n                        <Home group=\"fruits\" />\r\n                    </Route>\r\n                    <Route path=\"/fish\">\r\n                        <Home group=\"fish\" />\r\n                    </Route>\r\n                    <Route path=\"/drinks\">\r\n                        <Home group=\"drinks\" />\r\n                    </Route>\r\n                    <Route path=\"/frozen\">\r\n                        <Home group=\"frozen\" />\r\n                    </Route>\r\n                    <Route path=\"/pasta\">\r\n                        <Home group=\"pasta\" />\r\n                    </Route>\r\n                    <Route path=\"/sweets\">\r\n                        <Home group=\"sweets\" />\r\n                    </Route>\r\n                    <Route path=\"/sauces\">\r\n                        <Home group=\"sauces\" />\r\n                    </Route>\r\n                    <Route path=\"/search/:id\">\r\n                        <Home group=\"search\" />\r\n                    </Route>\r\n                    <Route path=\"/checkout\">\r\n                        {token ? <Checkout /> : <Auth />}\r\n                    </Route>\r\n                    <Route path=\"/settings\">\r\n                        {token ? <Settings /> : <Auth />}\r\n                    </Route>\r\n                    <Route path=\"/orders\">\r\n                        {token ? <Orders /> : <Auth />}\r\n                    </Route>\r\n                    <Route path=\"/Auth\">\r\n                        <Auth />\r\n                    </Route>\r\n\r\n                    <Route exact path=\"/\">\r\n                        <Home group=\"offer\" />\r\n                    </Route>\r\n                </Switch>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default withRouter(Routes);\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { authCheckState } from './store/actions/auth';\r\nimport Header from './components/Header';\r\nimport Routes from './routes/Routes';\r\n\r\nconst App = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(authCheckState());\r\n    });\r\n    return (\r\n        <div className=\"App-container\" data-test=\"component-app\">\r\n            <Header />\r\n            <div className=\"App-body\" data-test=\"App-body\">\r\n                <Routes />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default App;\r\n"],"sourceRoot":""}